{"version":3,"sources":["Components/SidebarData.js","Components/Navbar.js","Variables.js","Components/HomePage/HomePage.js","Pages/Home.js","Components/ContactsPage/ContactForm.js","Components/ContactsPage/PopupMessage.js","Components/ContactsPage/Popup.js","Components/ContactsPage/MessageBox.js","Pages/Contacts.js","Components/DeliveryPage/PopupDeliveryInfo.js","Components/DeliveryPage/PlaningDeliveryTable.js","Components/DeliveryPage/HistoryDeliveryTable.js","Components/DeliveryPage/PopupAddDelivery.js","Components/DeliveryPage/AllDeliveryTable.js","Pages/Delivery.js","Components/Files/PopupNewFile.js","Components/Files/PopupUpdateFile.js","Components/Files/FilesForm.js","Pages/Files.js","Components/UsersPage/PopupNewUser.js","Components/UsersPage/PopupEditUser.js","Components/UsersPage/PopupInfoUser.js","Components/UsersPage/UsersTableData.js","Pages/Users.js","Components/AdressesPage/PopupNewTown.js","Components/AdressesPage/AdressesTable.js","Pages/Adresses.js","Components/Setting/AccountInfoForm.js","Components/Setting/ChangePasswordForm.js","Pages/Settings.js","Components/Login/Login.js","Pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarData","title","path","icon","color","text","useStyles","makeStyles","theme","page","background","width","drawer","drawerPaper","root","display","active","borderRadius","tlo","margin","marginLeft","logo","justifyContent","marginTop","toolbar","mixins","date","flexGrow","Navbar","children","classes","navigate","useNavigate","location","useLocation","console","log","state","className","AppBar","sx","backgroundColor","Toolbar","Typography","format","Date","Button","onClick","Avatar","alt","src","height","Drawer","variant","anchor","paper","style","List","map","item","role","pathname","unactive","m","ListItemButton","ListItemIcon","variables","info","flexDirection","textAlign","alignItems","account","HomePage","useState","tableData","setTableData","useEffect","fetch","id","then","data","json","Container","padding","borderRight","borderColor","fullName","Home","props","useParams","mt","contc","flexWrap","autocom","ContactsForm","tableDataUsers","setTableDataUsers","value","senderId","message","setMessage","handleChange","event","newValue","name","target","includes","send","a","options","method","body","JSON","stringify","headers","userId","p","boxShadow","border","component","align","Autocomplete","clearOnEscape","getOptionLabel","option","onChange","renderInput","params","TextField","helperText","label","topic","multiline","rows","placeholder","contents","type","disabled","tekstbox","PopupMessage","messageId","userName","content","openPopupMess","setOpenPopupMess","senderName","refreshPage","window","reload","Dialog","open","DialogTitle","DialogContent","defaultValue","Popup","openPopup","setOpenPopup","handleClose","deleteClick","React","useCallback","DialogActions","startIcon","mess","bgcolor","position","overflow","maxHeight","MessageBox","response","setChangeStatus","element","find","el","getInfo","dense","ListItem","disablePadding","statusName","fontSize","ListItemText","primary","secondary","Fragment","Id","direction","flexFlow","Contacts","PopupDeliveryInfo","openPopupDelivery","setOpenPopupDelivery","delivery","fullWidth","maxWidth","studentScore","deliveryDate","year","semestr","week","description","updateDate","roleForm","minWidth","PlaningDeliveryTable","future","setFuture","columns","field","headerName","cellClassName","getActions","HistoryDeliveryTable","history","setHistory","openPopupAddDelivery","setOpenPopupAddDelivery","valueUser","setDelivery","save","noOptionsText","LocalizationProvider","dateAdapter","AdapterDateFns","Stack","spacing","InputProps","startAdornment","InputAdornment","mask","maskChar","AllDeliveryTable","user","roleId","hist","Delivery","PopupNewFile","openPopupFile","setOpenPopupFile","fileDetails","setFileDetails","file","setFile","htmlFor","files","accept","e","formData","FormData","append","axios","url","PopupUpdateFile","openPopupFileUpdate","setOpenPopupFileUpdate","newFile","FilesForm","filesData","setFilesData","styled","download","blob","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","mr","Files","dataTown","setDataTown","setNewUser","password","showPassword","shortName","street","number","code","phone","email","townId","values","setValues","registy","ml","mb","endAdornment","IconButton","onMouseDown","preventDefault","edge","openPopupEditUser","setOpenPopupEditUser","newUser","updateUser","marginBottom","openPoupInfoUser","setOpenPoupInfoUser","townName","province","district","commune","QuickSearchToolbar","Box","pb","QuickFilteringGrid","deleteUser","setUser","setRows","setTimeout","prevRows","filter","row","components","PopupNewTown","openPopupTown","setOpenPopupTown","town","setNewTown","readOnly","searchText","setSearchText","requestSearch","searchValue","searchRegex","RegExp","replace","filteredRows","Object","keys","some","test","toString","GridToolbar","componentsProps","clearSearch","AccountInfoForm","adressData","setAdressData","editUser","InputLabelProps","shrink","handleChangePass","prop","handleClickShowPassword","handleMouseDownPassword","borderBottom","showPassword1","password1","showPassword2","password2","showPassword3","password3","Settings","login","loginDto","roleName","createTheme","palette","main","lightGreen","default","action","hover","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","h6","fontWeight","App","WithNav","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee154bdd.chunk.js","sourcesContent":["import React from 'react';\r\nimport GroupOutlinedIcon from '@mui/icons-material/GroupOutlined';\r\nimport ArticleOutlinedIcon from '@mui/icons-material/ArticleOutlined';\r\nimport LocalShippingOutlinedIcon from '@mui/icons-material/LocalShippingOutlined';\r\nimport PermContactCalendarOutlinedIcon from '@mui/icons-material/PermContactCalendarOutlined';\r\nimport CommentOutlinedIcon from '@mui/icons-material/CommentOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: 'Użytkownicy',\r\n    path: '/users',\r\n    icon: <GroupOutlinedIcon color=\"secondary\" />,\r\n    text: 'Użytkownicy',\r\n  },\r\n \r\n  {\r\n    title: 'Dokumenty',\r\n    path: '/files',\r\n    icon: <ArticleOutlinedIcon color=\"secondary\"/>,\r\n  },\r\n \r\n  {\r\n    title: 'Dostawy',\r\n    path: '/delivery',\r\n    icon: <LocalShippingOutlinedIcon color=\"secondary\"/>,\r\n  },\r\n \r\n  {\r\n    title: 'Adresy',\r\n    path: '/adresses',\r\n    icon: <PermContactCalendarOutlinedIcon color=\"secondary\" />,\r\n  },  \r\n  \r\n  {\r\n    title: 'Wiadomości',\r\n    path: '/contacts',\r\n    icon: <CommentOutlinedIcon color=\"secondary\" />,\r\n  },\r\n  {\r\n    title: 'Ustawienia',\r\n    path: '/settings',\r\n    icon: <SettingsOutlinedIcon color=\"secondary\"/>,\r\n  },\r\n];","import React from 'react';\r\nimport { SidebarData } from './SidebarData';\r\nimport { Button, List, ListItemButton, ListItemIcon, Typography } from '@mui/material';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Drawer } from '@material-ui/core';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { format } from 'date-fns';\r\n\r\nconst drawerWidth = 200\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    page: {\r\n      background: '#f9f9f9',\r\n      width: '100%'\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerPaper: {\r\n      //background: '#f0f4c3',\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n      // justifyContent: 'center',\r\n      // alignItems: 'center',  \r\n    },\r\n    active: {\r\n      background: '#aed581',\r\n      borderRadius: '15px',\r\n    },\r\n    tlo: {\r\n      margin: 10,\r\n      marginLeft: 0,\r\n    },\r\n    logo: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginTop: 15,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    date: {\r\n      flexGrow: 1\r\n    }\r\n  }\r\n})\r\n\r\nexport default function Navbar({ children }) {\r\n  const classes = useStyles()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n\r\n  console.log(location.state, \"location\")\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <AppBar sx={{ width: `calc(100% - ${drawerWidth}px)`, backgroundColor: \"white\" }}>\r\n        <Toolbar sx={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <Typography>\r\n            Dzisiejsza data: {format(new Date(), 'd MM Y')}\r\n          </Typography>\r\n\r\n          <Typography >\r\n            <Button onClick={() => navigate(\"/settings\", { state: location.state })} >\r\n              <Avatar alt=\"szkola\" src=\"logo_szkoła.png\" sx={{ width: 50, height: 50 }} />\r\n            </Button>\r\n          </Typography>\r\n\r\n          <Typography>\r\n            <Button color='secondary'\r\n              onClick={() => navigate('/login')}\r\n              >\r\n              Wyloguj!\r\n            </Button>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        anchor=\"left\"\r\n        classes={{ paper: classes.drawerPaper }}\r\n      >\r\n        <div>\r\n          <Typography variant='h5'  className={classes.logo} >\r\n\r\n            <Button onClick={() => navigate(\"/home\", { state: location.state })} >\r\n\r\n              <img src=\"Kleks_logo.png\" alt=\"kleks\" style={{ width: 100 }} />\r\n\r\n            </Button>\r\n\r\n          </Typography>\r\n        </div>\r\n\r\n        <div className={classes.tlo}>\r\n          <List>\r\n            {SidebarData.map(item => {\r\n              if (location.state.role == \"Szkola\" && (item.path == \"/users\" || item.path == \"/adresses\")) {\r\n                return (null);\r\n              }\r\n              else {\r\n                return (<Typography className={location.pathname == item.path ? classes.active : classes.unactive}\r\n                  sx={{\r\n                    display: 'flex',\r\n                    width: 180,\r\n                    m: 1, borderRadius: '15px',\r\n                    '&:hover': {\r\n                      borderRadius: '15px',\r\n                    },\r\n                  }}>\r\n                  <ListItemButton\r\n                    key={item.title}\r\n                    onClick={() => navigate(item.path, { state: location.state })}>\r\n                    <ListItemIcon>{item.icon}</ListItemIcon>\r\n                    <Typography variant='h6'> {item.title}</Typography>\r\n                  </ListItemButton>\r\n                </Typography>)\r\n\r\n              }\r\n            })}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n\r\n      <div className={classes.page}>\r\n        <div className={classes.toolbar}></div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","export const variables={\r\n    API_URL_USERS:\" https://2b00-31-60-1-102.ngrok.io/users\",\r\n    API_URL_USERS_LOGIN:\" https://2b00-31-60-1-102.ngrok.io/users/account/login\",\r\n    API_URL_USERS_REGISTER:\" https://2b00-31-60-1-102.ngrok.io/users/account/register\",\r\n\r\n\r\n    API_URL_MESSAGE:\" https://2b00-31-60-1-102.ngrok.io/message\",\r\n    API_URL_MESSAGE_SEND:\" https://2b00-31-60-1-102.ngrok.io/message/send\",\r\n    API_URL_MESSAGE_READ:\" https://2b00-31-60-1-102.ngrok.io/message/read\",\r\n    API_URL_MESSAGE_REPLY:\" https://2b00-31-60-1-102.ngrok.io/message/reply\",\r\n\r\n\r\n    API_URL_TOWNS:\" https://2b00-31-60-1-102.ngrok.io/towns\",\r\n    API_URL_ADD_TOWN:\" https://2b00-31-60-1-102.ngrok.io/contacts/AddNewTown\",\r\n\r\n\r\n    API_URL_ADRESS:\" https://2b00-31-60-1-102.ngrok.io/contacts\",\r\n\r\n    API_URL_ADRESS_BROWSE:\" https://2b00-31-60-1-102.ngrok.io/addresses_browse\",\r\n\r\n    API_URL_DELIVERY:\" https://2b00-31-60-1-102.ngrok.io/delivery\",\r\n    API_URL_DELIVERY_BROWSE:\" https://2b00-31-60-1-102.ngrok.io/delivery\",\r\n    API_URL_DELIVERY_HISTORY:\" https://2b00-31-60-1-102.ngrok.io/delivery/history\",\r\n    API_URL_DELIVERY_CREATE:\" https://2b00-31-60-1-102.ngrok.io/delivery/create\",\r\n\r\n    API_URL_DOCUMENTS_USER:\" https://2b00-31-60-1-102.ngrok.io/files/browse\",\r\n    API_URL_DOCUMENTS_BROWSE:\" https://2b00-31-60-1-102.ngrok.io/files\",\r\n    API_URL_DOCUMENTS_DOWNLOAD:\" https://2b00-31-60-1-102.ngrok.io/files/download\",\r\n    API_URL_DOCUMENTS_NEWUPLOAD:\" https://2b00-31-60-1-102.ngrok.io/files/newUpload\",\r\n    API_URL_DOCUMENTS_UPDATE:\" https://2b00-31-60-1-102.ngrok.io/files/upload\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { variables } from '../../Variables';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    \r\n    info: {\r\n        width: '100%',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: '15px',\r\n        background: 'white',\r\n    },\r\n    account: {\r\n        width: '50%',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems: 'center'\r\n    }\r\n})\r\n\r\nexport default function HomePage() {\r\n    const classes = useStyles()\r\n    const [tableData, setTableData] = useState([])\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        fetch(variables.API_URL_USERS + `/${location.state.id}`)\r\n            .then((data) => data.json())\r\n            .then((data) => setTableData(data))            \r\n    },[]);\r\n   \r\nconsole.log(location.state, \"HP\")\r\n\r\n    return (\r\n        <Container sx={{ padding: 2 }}  >\r\n            \r\n\r\n                <Typography className={classes.info}>\r\n\r\n                    <Typography className={classes.account} sx={{ borderRight: 2, borderColor: '#c5cae9' }}>\r\n\r\n                        <img src=\"mleko.jpg\" alt=\"mleko\" style={{ width: 400}} />\r\n\r\n                    </Typography>\r\n\r\n                    <Typography sx={{ m: 3, width: '95%', height: 'auto'}}>\r\n                        <h1>Witaj!</h1>\r\n                        <h3>Jesteś zalogowany jako użytkownik: {tableData.fullName} </h3>                                                \r\n                    </Typography>\r\n\r\n                </Typography>\r\n\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport HomePage from '../Components/HomePage/HomePage';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function Home({props}) {\r\n \r\nconst {id} = useParams(props);\r\n\r\n console.log(id, 'props')\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <Typography sx={{mt:3}}>\r\n                <HomePage id={id} />\r\n            </Typography>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { variables } from '../../Variables';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: '350px',\r\n        height: '480px',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: '15px',\r\n        flexWrap:\"wrap\",\r\n\r\n    },\r\n    autocom: {\r\n        display: \"flex\",\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        flexWrap:\"wrap\",\r\n\r\n    }\r\n})\r\n\r\nexport default function ContactsForm() {\r\n    const classes = useStyles()\r\n    const [tableDataUsers, setTableDataUsers] = useState([])\r\n    const [value, setValue] = useState(tableDataUsers[0]);\r\n    const location = useLocation()\r\n   const [message, setMessage] = useState({\r\n        senderId: location.state.id\r\n    })\r\n\r\n    function validateForm() {\r\n\r\n        return message.userId && message.topic&&message.contents;\r\n    \r\n      }\r\n\r\n    useEffect(() => {\r\n        fetch(variables.API_URL_USERS)\r\n            .then((data) => data.json())\r\n            .then((data) => setTableDataUsers(data))\r\n    }, []);\r\n\r\n    const handleChange = (event, newValue) => {\r\n\r\n        let name = event.target.id;\r\n\r\n        if (name.includes('clear-on-escape-option') ) name = 'userId'\r\n     \r\n\r\n        setMessage({\r\n\r\n            ...message,\r\n\r\n            [name]: newValue?.id ?? event.target.value,\r\n\r\n        });\r\n    };\r\n\r\n    const send = async () => {\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(message),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        fetch(variables.API_URL_MESSAGE_SEND, options).then(()=>{\r\n            setMessage({userId:message.userId})\r\n        });\r\n    }\r\n\r\n    console.log(message, \"newMessage\")\r\n\r\n    return (\r\n        <Container sx={{ padding: 3 }}  >\r\n\r\n            <Typography className={classes.contc} p={1}\r\n                sx={{ boxShadow: 10, border: 2, borderColor: '#c5cae9' }}  >\r\n\r\n                <Typography\r\n                    variant='h5'\r\n                    color='#e8eaf6'\r\n                    component='h2'\r\n                    align=\"center\"\r\n                    sx={{\r\n                        borderRadius: '15px',\r\n                        boxShadow: 5,\r\n                        background: '#689f38',\r\n                        width: \"80%\",\r\n                    }}>\r\n                    Wyślij wiadomość\r\n                </Typography>\r\n\r\n                <Typography className={classes.autocom}>\r\n                    <Autocomplete\r\n                        value={value}\r\n                        // inputValue={message.userId}\r\n                    \r\n                        id=\"clear-on-escape\"\r\n                        clearOnEscape\r\n                        options={tableDataUsers}\r\n                        getOptionLabel={(option) => option.fullName}\r\n                        sx={{ width: 280 }}\r\n                        onChange={handleChange}\r\n                        renderInput={(params) => <TextField\r\n                            helperText=\"Wybierz użytkownika z listy\"\r\n                            {...params} label=\"Nadawca\" variant=\"standard\" />} />\r\n                </Typography>\r\n                <Typography>\r\n                    <TextField\r\n                        id=\"topic\"\r\n                        value={message?.topic??\"\"}\r\n                     \r\n                        sx={{ m: 1, width: '280px' }}\r\n                        label=\"Temat wiadomości\"\r\n                        multiline\r\n                        rows={2}\r\n                        placeholder='Temat'\r\n                        variant=\"standard\"\r\n                        color='secondary'\r\n                        onChange={handleChange}\r\n                    />\r\n                </Typography>\r\n                <Typography >\r\n                    <TextField\r\n                        id=\"contents\"\r\n                        value={message?.contents??\"\"}\r\n                  \r\n                        sx={{ m: 1, width: '280px' }}\r\n                        multiline\r\n                        rows={4}\r\n                        label=\"Wiadomość...\"\r\n                        helperText=\"Proszę wpisać treść wiadomości\"\r\n                        variant=\"outlined\"\r\n                 \r\n                        onChange={handleChange}\r\n                    />\r\n                </Typography>\r\n\r\n                <Typography sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: 'flex-end'\r\n                }}>\r\n                    <Button\r\n                        sx={{ width: '120px', height: '40px' }}\r\n                        type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                        onClick={send}\r\n                        disabled={!validateForm()}\r\n                    >Wyślij</Button>\r\n                </Typography>\r\n\r\n            </Typography>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import { Dialog, DialogContent, DialogTitle } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { variables } from '../../Variables';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n \r\n    contc: {\r\n        width: '550px',\r\n        height: '300px',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        border: 1,\r\n        borderRadius: '15px',\r\n        borderColor: '#7986cb',\r\n    },\r\n    tekstbox:{\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n    }\r\n})\r\n\r\nexport default function PopupMessage(props) {\r\n    const classes = useStyles()\r\n    const {date, messageId, userName, topic, content, openPopupMess, setOpenPopupMess} = props;\r\n    const [message, setMessage] = useState({\r\n        messageId:messageId, senderName:\"Szkola Podstawowa nr 12\", topic, content\r\n    })\r\n    \r\n    const handleClose = () => {\r\n        setOpenPopupMess(false);\r\n      };\r\n\r\n      function refreshPage() {\r\n        window.location.reload();\r\n    }\r\n\r\n      const handleChange = (event, newValue) => {\r\n\r\n        let name = event.target.id;\r\n\r\n        if (name.includes('clear-on-escape-option') ) name = 'userId'\r\n     \r\n\r\n        setMessage({\r\n\r\n            ...message,\r\n\r\n            [name]: newValue?.id ?? event.target.value,\r\n\r\n        });\r\n\r\n    };\r\n        //console.log(message, \"odpowiedz\")\r\n\r\n    const send = async () => {\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(message),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        fetch(variables.API_URL_MESSAGE_REPLY, options).then(refreshPage)\r\n\r\n    }\r\n\r\n    return(\r\n        <Dialog open={openPopupMess}>\r\n            <Button\r\n                sx={{ width: '90px', height: '35px' }}\r\n                type=\"submit\" color=\"error\" variant=\"contained\"\r\n                onClick={handleClose}>\r\n                    Anuluj\r\n            </Button>\r\n\r\n            <DialogTitle style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n            }}>\r\n                <div>\r\n                    <h2> Odpowiedz na wiadomość od użytkownika:  {userName} </h2>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent sx={{\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n            }}>\r\n                <div>\r\n                    <Typography \r\n                        className={classes.contc} \r\n                        p={1}\r\n                        sx={{ boxShadow: 3 }}  >\r\n                                            \r\n                        <Typography>\r\n                            <TextField   \r\n                                id=\"topic\"\r\n                                value={\"Re: \"+ topic}   \r\n                                sx={{ m: 1, width: '500px' }}                                                                                \r\n                                label=\"Temat wiadomości\"\r\n                                multiline\r\n                                rows={2}\r\n                                color='secondary' \r\n                                onChange={handleChange}\r\n                                />\r\n                        </Typography>\r\n                        <Typography >\r\n                            <TextField\r\n                             id=\"contents\"\r\n                             value={message?.contents}\r\n                                sx={{ m: 1, width: '500px' }}\r\n                                multiline\r\n                                rows={5}\r\n                                label=\"Wiadomość...\"\r\n                                defaultValue= {\"\\n------\\nDnia: \" + date + \",Użytkownik \"+ userName + \" napisał: \" + content}\r\n                                onChange={handleChange}\r\n    \r\n                            />\r\n                        </Typography>\r\n\r\n                        <Typography sx={{\r\n                            display: \"flex\",\r\n                            justifyContent: 'flex-end'\r\n                        }}>\r\n                            <Button\r\n                                sx={{ width: '120px', height: '40px' }}\r\n                                type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                                onClick={send}\r\n                                >Wyślij</Button>\r\n                        </Typography>\r\n\r\n                    </Typography>\r\n                </div>\r\n                </DialogContent>\r\n        </Dialog>\r\n\r\n\r\n    )\r\n}","import { Dialog, DialogActions, DialogContent, DialogTitle} from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport QuestionAnswerOutlinedIcon from '@mui/icons-material/QuestionAnswerOutlined';\r\nimport Button from '@mui/material/Button';\r\nimport PopupMessage from './PopupMessage';\r\nimport { variables } from '../../Variables';\r\n\r\nexport default function Popup(props) {\r\n\r\n    const {openPopup, setOpenPopup, message} = props;\r\n    const [openPopupMess, setOpenPopupMess] = useState(false)\r\n\r\n    const handleClose = () => {\r\n        setOpenPopup(false);\r\n        window.location.reload();\r\n\r\n      }\r\n\r\n      function refreshPage() {\r\n        window.location.reload();\r\n    }\r\n     \r\n      const deleteClick = React.useCallback(\r\n        (id) => () => {\r\n    \r\n          const options = {\r\n            method: 'DELETE',\r\n      \r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          };\r\n      \r\n          fetch(variables.API_URL_MESSAGE + `/${id}`, options).then(() => {\r\n            handleClose()\r\n          }).then(refreshPage);        \r\n          console.log(id, \"deleteMessage\")\r\n        },\r\n        [],\r\n      );\r\n     \r\n    return (          \r\n        <Dialog open={openPopup} >\r\n            <Button\r\n                sx={{ width: '90px', height: '35px' }}\r\n                type=\"submit\" color=\"error\" variant=\"contained\"\r\n                onClick={handleClose}>\r\n                    Zamknij\r\n            </Button>\r\n\r\n            <DialogTitle>                                    \r\n                <div>            \r\n                    <h3> Wiadomość od użytkownika:  {message?.senderName} </h3>\r\n                    <h4>Temat: {message?.topic} </h4>\r\n                    <h6>Data nadania: {message?.date} </h6>\r\n                </div>\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n              {message?.contents}\r\n            </DialogContent>\r\n\r\n            <DialogActions>                     \r\n                <Button                 \r\n                    sx={{ width: '150px', height: '35px' }}\r\n                    color=\"secondary\" \r\n                    variant=\"outlined\" \r\n                    startIcon={<QuestionAnswerOutlinedIcon />}\r\n                    onClick={async () => {\r\n                        await setOpenPopupMess(message)                                        \r\n                      }}\r\n                    >\r\n                        Odpowiedz\r\n                </Button>\r\n\r\n                <Button                 \r\n                    sx={{ width: '150px', height: '35px' }}\r\n                    color=\"secondary\" \r\n                    variant=\"outlined\" \r\n                    onClick = {deleteClick(message?.id)}\r\n                    startIcon={<DeleteOutlinedIcon />}>\r\n                        Usuń\r\n                </Button>           \r\n                       \r\n            </DialogActions>\r\n\r\n            <PopupMessage\r\n                date = {message?.date}\r\n                messageId = {message?.id}\r\n                userId = {message?.userId}\r\n                userName={message?.senderName}\r\n                topic = {message?.topic}\r\n                content = {message?.contents}\r\n                openPopupMess={openPopupMess}\r\n                setOpenPopupMess={setOpenPopupMess}\r\n            >             \r\n            </PopupMessage>\r\n\r\n        </Dialog>\r\n        \r\n\r\n    )\r\n\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ListItemIcon, Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\r\nimport Popup from './Popup';\r\nimport { variables } from '../../Variables';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: 'auto',\r\n        height: '480px',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems:'center',\r\n        textAlign: 'center',\r\n        borderRadius: '15px',\r\n        flexWrap:\"wrap\",\r\n\r\n    },\r\n    mess: {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        bgcolor: 'background.paper',\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        maxHeight: 400,\r\n        '& ul': { padding: 0 },\r\n        flexWrap:\"wrap\",\r\n\r\n    }\r\n})\r\n\r\nexport default function MessageBox() {\r\n    const classes = useStyles()\r\n    const [tableData, setTableData] = useState([])\r\n    const [message, setMessage] = useState()\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        fetch(variables.API_URL_MESSAGE+`/${location.state.id}`)\r\n            .then((data) => data.json())\r\n            .then((data) => setTableData(data))\r\n            .then(response => console.log(response))\r\n    },[])\r\n\r\n    const setChangeStatus = async (id) => {\r\n        let element = tableData.find(el => el.id == id)\r\n       \r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify(),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n             };             \r\n             fetch(variables.API_URL_MESSAGE_READ +`/${id}`, options)\r\n        \r\n        setMessage(element)                \r\n      }\r\n\r\n    const getInfo = async (id) => {\r\n        let element = tableData.find(el => el.id == id)\r\n        setMessage(element)\r\n        console.log(element, \"element\");\r\n      }\r\n    \r\n    return (\r\n        <Container  sx={{ padding: 3 }}>\r\n            <Typography\r\n                className={classes.contc} p={1}\r\n                sx={{ boxShadow: 10, border: 2, borderColor: '#c5cae9' }}  >\r\n\r\n                <Typography\r\n                    variant='h5'\r\n                    color='#e8eaf6'\r\n                    component='h2'\r\n                    align=\"center\"\r\n                    sx={{\r\n                        borderRadius: '15px',\r\n                        boxShadow: 5,\r\n                        background: '#689f38',\r\n                        width: \"80%\",\r\n                    }}>\r\n                    Twoje wiadomości\r\n                </Typography>\r\n                \r\n                <Popup\r\n                    openPopup={openPopup}\r\n                    setOpenPopup={setOpenPopup}\r\n                    message={message} >\r\n                </Popup>\r\n\r\n                <Typography sx={{ height: '400px', width: '580px', boxShadow: 3 }} >\r\n                    <List dense\r\n                        className={classes.mess} >\r\n                        {tableData.map((message) => {\r\n                            return (              \r\n                                <ListItem sx={{ height: '80px', width: '550px', boxShadow: 2, border: 1,\r\n                                borderRadius: '15px',\r\n                                borderColor: '#e1f5fe',\r\n                                m: 1, }}                          \r\n                                disablePadding >                \r\n                                    <ListItemButton                            \r\n                                        style={{borderRadius: \"15px\", background: message.statusName == \"Nieprzeczytane\"  ?  '#ccff90' :  null}} \r\n                                        onClick={async () => {\r\n                                            await getInfo(message.id).then(() => {\r\n                                                setOpenPopup(true);\r\n                                                if(message.statusName == \"Nieprzeczytane\")\r\n                                                {\r\n                                                    setChangeStatus(message.id)\r\n                                                }\r\n                                            })\r\n                                          }}\r\n                                        >             \r\n                                        <ListItem alignItems=\"flex-start\">\r\n                                            <ListItemIcon>\r\n                                                <EmailOutlinedIcon color=\"secondary\" sx={{fontSize:\"xx-large\"}} />                                                \r\n                                            </ListItemIcon>\r\n                                             <ListItemText\r\n                                                key={message.Id}\r\n                                                primary={message.topic}\r\n                                                secondary={                                            \r\n                                                    <React.Fragment>\r\n                                                        <Typography\r\n                                                            sx={{ display: 'inline' }}\r\n                                                            component=\"span\"\r\n                                                            variant=\"body2\"\r\n                                                            color=\"text.primary\"\r\n                                                        >                               \r\n                                                        Nadawca: {message.senderName}                                                                                                                                                                                         \r\n                                                        </Typography>      \r\n                                                    </React.Fragment>\r\n                                                }\r\n                                            />                                                                    \r\n                                        </ListItem>                                        \r\n                                    </ListItemButton>                                    \r\n                                </ListItem> \r\n                            );                            \r\n                        })}\r\n                    </List>\r\n                </Typography>\r\n\r\n            </Typography>\r\n\r\n        </Container>\r\n        \r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport ContactForm from '../Components/ContactsPage/ContactForm';\r\nimport MessageBox from '../Components/ContactsPage/MessageBox';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    mess: {    \r\n        display: 'flex',\r\n        direction: 'row',\r\n        flexFlow: 'stretch',  \r\n        background: 'white',   \r\n    }    \r\n})\r\n\r\nexport default function Contacts({props}) {\r\n    const classes = useStyles()\r\n    const {id} = useParams(props);\r\n\r\n    return (\r\n        <Container>\r\n           \r\n            <Typography className={classes.mess} sx={{mt:3}}>\r\n                <MessageBox id={id}/>\r\n                <ContactForm id={id}/>\r\n\r\n            </Typography>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import { Dialog, DialogContent, DialogTitle } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { variables } from '../../Variables';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n \r\n    contc: {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'flex-start',\r\n        border: 1,\r\n        borderRadius: '15px',\r\n        borderColor: '#7986cb',\r\n    },\r\n    tekstbox:{\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        textAlign: 'flex-start',\r\n    }\r\n})\r\n\r\nexport default function PopupDeliveryInfo(props) {\r\n    const classes = useStyles()\r\n    const {openPopupDelivery, setOpenPopupDelivery, delivery} = props;\r\n    const [statusDelivery, setStatusDelivery] = useState()\r\n    const location = useLocation()\r\n\r\n    \r\n    const handleClose = () => {\r\n        setOpenPopupDelivery(false);\r\n      };\r\n\r\n      function refreshPage(){ \r\n        window.location.reload(); \r\n    }\r\n\r\n    function roleForm() {\r\n        if(location.state.role === 'Admin')\r\n        return 1;    \r\n      }\r\n\r\n      const setChangeStatus = async (id) => {       \r\n            const options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify(),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n             };             \r\n             fetch(variables.API_URL_DELIVERY +`/${id}`, options)        \r\n      }      \r\n    return(\r\n        <Dialog open={openPopupDelivery}\r\n        fullWidth\r\n        maxWidth=\"sm\">\r\n            <Button\r\n                sx={{ width: '90px', height: '35px' }}\r\n                type=\"submit\" color=\"error\" variant=\"contained\"\r\n                onClick={handleClose}>\r\n                    Anuluj\r\n            </Button>\r\n\r\n            <DialogTitle style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n            }}>\r\n                <div>\r\n                    <h2> Szczegóły dostawy</h2>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent sx={{\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n            }}>\r\n                <Typography\r\n                    className={classes.contc}                   \r\n                    p={1}\r\n                    sx={{ boxShadow: 3 }}  >\r\n                    \r\n                    <Typography>\r\n                        <p>Nazwa użytkownika: {delivery?.userName}</p>\r\n                        <p>Ilość uczniów: {delivery?.studentScore} </p>\r\n                        <p>Termin dostawy: {delivery?.deliveryDate} </p>\r\n                        <p>Rok szkolny: {delivery?.year} </p>\r\n                        <p>Semestr: {delivery?.semestr} </p>\r\n                        <p>Tydzień: {delivery?.week} </p>\r\n                        <p>Opis: {delivery?.description} </p>\r\n                        <p>Ostatnia aktualizacja: {delivery?.updateDate} </p>\r\n                        <p>Status: {delivery?.statusName} </p>\r\n                    </Typography>\r\n                   \r\n\r\n                    <Typography sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: 'flex-end'\r\n                    }}>\r\n                        <Button\r\n                            sx={{ width: '130px', height: '30px' }}\r\n                            type=\"submit\" color=\"secondary\" variant=\"contained\"   \r\n                            disabled={delivery?.statusName == \"Zrealizowano\"}\r\n                            disabled={!roleForm()}\r\n                            onClick={async () => { \r\n                                await setChangeStatus(delivery?.id).then(()=>{\r\n                                    handleClose()\r\n                                }).then(refreshPage)}}\r\n                        >\r\n                            Zrealizowano\r\n                        </Button>\r\n\r\n                    </Typography>\r\n\r\n                    </Typography>\r\n                </DialogContent>\r\n        </Dialog>\r\n\r\n\r\n    )\r\n}","import React,  {useState, useEffect} from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport {variables} from '../../Variables';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport { GridActionsCellItem } from '@mui/x-data-grid-pro';\r\nimport {DataGrid} from '@mui/x-data-grid';\r\nimport PopupDeliveryInfo from './PopupDeliveryInfo';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n \r\n    contc: {\r\n        width: 'auto',\r\n        minWidth: '500px',\r\n        height: '300px',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems:'center',\r\n        borderRadius: '15px',\r\n    },\r\n    autocom:{        \r\n        display: \"flex\",\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',    \r\n        width: 'auto',\r\n        minWidth: '470px',\r\n        height: '220px',\r\n        borderRadius: '15px',\r\n    }\r\n})\r\n\r\nexport default function PlaningDeliveryTable() {\r\n    const [tableData, setTableData] = useState([])\r\n    const [user, setUser] = useState([])\r\n\r\n    const classes = useStyles()\r\n    const [future, setFuture] = useState()\r\n    const [openPopupDelivery, setOpenPopupDelivery] = useState(false)\r\n    const location = useLocation()\r\n\r\n      useEffect(() => {       \r\n        if(location.state.role === 'Szkola'){\r\n            fetch(variables.API_URL_DELIVERY_BROWSE + `/future/${location.state.id}`)\r\n            .then((data) => data.json())\r\n            .then((data) => setTableData(data))\r\n        }\r\n        if(location.state.role === 'Admin'){\r\n            fetch(variables.API_URL_DELIVERY_BROWSE + \"/future\")\r\n                .then((data) => data.json())\r\n                .then((data) => setTableData(data))\r\n        }  \r\n    },[]); \r\n  \r\n\r\n    const getInfo = async (id) => {\r\n        let element = tableData.find(el => el.id == id)\r\n        setFuture(element)\r\n        console.log(element, \"elementFuture\");    \r\n      }    \r\n   \r\n    const columns = [\r\n        { field: 'deliveryDate', headerName: 'Data', width: 150},\r\n        { field: 'userName', headerName: 'Nazwa', width: 150},\r\n        { field: 'studentScore', headerName: 'Ilość', width: 80},\r\n        {\r\n          field: 'actions',\r\n          type: 'actions',\r\n          width: 30,\r\n          headerName: 'I',\r\n          cellClassName: 'actions',\r\n          getActions: (params) => {\r\n            return [\r\n                <GridActionsCellItem\r\n                icon={<InfoOutlinedIcon />}\r\n                label=\"Info\"\r\n                onClick={async () => {\r\n                    await getInfo(params.id).then(() => {\r\n                        setOpenPopupDelivery(true);\r\n                    })\r\n                  }}\r\n                color=\"inherit\"\r\n              />,                                                \r\n            ];\r\n          },\r\n        },\r\n      ];\r\n\r\n    return (\r\n        <Container sx={{ padding: 3 }}  >\r\n                   \r\n            <Typography className={classes.contc} p={1}\r\n            sx={{ boxShadow: 10, border: 2, borderColor: '#c5cae9' }}  >\r\n\r\n                <Typography\r\n                     variant='h5'\r\n                     color='#e8eaf6'\r\n                     component='h2'\r\n                     align=\"center\"\r\n                     sx={{\r\n                      borderRadius: '15px',\r\n                      boxShadow: 5,\r\n                      background: '#689f38',\r\n                      width: \"80%\",\r\n                         }}>\r\n                    Planowane dostawy\r\n                </Typography>\r\n\r\n                <Typography className={classes.autocom} sx={{ boxShadow: 3 }}>\r\n                    <DataGrid\r\n                        rows={tableData}\r\n                        columns={columns}                       \r\n                    />\r\n                </Typography>\r\n\r\n                <PopupDeliveryInfo                    \r\n                    openPopupDelivery={openPopupDelivery}\r\n                    setOpenPopupDelivery={setOpenPopupDelivery}\r\n                    delivery={future}                    \r\n                    >\r\n                </PopupDeliveryInfo>\r\n        \r\n            </Typography>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React,  {useState, useEffect} from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport {variables} from '../../Variables';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport { GridActionsCellItem } from '@mui/x-data-grid-pro';\r\nimport {DataGrid} from '@mui/x-data-grid';\r\nimport PopupDeliveryInfo from './PopupDeliveryInfo';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n \r\n    contc: {\r\n        width: 'auto',\r\n        minWidth: '500px',\r\n        height: '300px',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems:'center',\r\n        borderRadius: '15px',\r\n    },\r\n    autocom:{        \r\n        display: \"flex\",\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',    \r\n        width: 'auto',\r\n        minWidth: '470px',\r\n        height: '220px',\r\n        borderRadius: '15px',\r\n    }\r\n})\r\n\r\nexport default function HistoryDeliveryTable() {\r\n    const [tableData, setTableData] = useState([])\r\n    const [user, setUser] = useState([])\r\n\r\n    const classes = useStyles()\r\n    const [history, setHistory] = useState([])\r\n    const [openPopupDelivery, setOpenPopupDelivery] = useState(false)\r\n    const location = useLocation()\r\n\r\n        useEffect(() => {       \r\n            if(location.state.role === 'Szkola'){\r\n                fetch(variables.API_URL_DELIVERY_HISTORY + `/${location.state.id}`)\r\n                .then((data) => data.json())\r\n                .then((data) => setTableData(data))\r\n            }\r\n            if(location.state.role === 'Admin'){\r\n                fetch(variables.API_URL_DELIVERY_HISTORY)\r\n                    .then((data) => data.json())\r\n                    .then((data) => setTableData(data))\r\n            }  \r\n        },[]); \r\n    \r\n    \r\n\r\n    const getInfo = async (id) => {\r\n        let element = tableData.find(el => el.id == id)\r\n        setHistory(element)\r\n      }    \r\n   \r\n    const columns = [\r\n        { field: 'deliveryDate', headerName: 'Data', width: 150},\r\n        { field: 'userName', headerName: 'Nazwa', width: 150},\r\n        { field: 'studentScore', headerName: 'Ilość', width: 80},\r\n        {\r\n          field: 'actions',\r\n          type: 'actions',\r\n          width: 30,\r\n          headerName: 'I',\r\n          cellClassName: 'actions',\r\n          getActions: (params) => {\r\n            return [\r\n              <GridActionsCellItem\r\n                icon={<InfoOutlinedIcon />}\r\n                label=\"Info\"\r\n                color=\"inherit\"\r\n                onClick={async () => {\r\n                    await getInfo(params.id).then(() => {\r\n                        setOpenPopupDelivery(true);\r\n                    })\r\n                  }}\r\n              />,              \r\n            ];\r\n          },\r\n        },\r\n      ];\r\n\r\n    return (\r\n        <Container sx={{ padding: 3 }}  >\r\n                   \r\n            <Typography className={classes.contc} p={1}\r\n            sx={{ boxShadow: 10, border: 2, borderColor: '#c5cae9' }}  >\r\n\r\n                <Typography\r\n                    variant='h5'\r\n                    color='#e8eaf6'\r\n                    component='h2'\r\n                    align=\"center\"\r\n                    sx={{\r\n                        borderRadius: '15px',\r\n                        boxShadow: 5,\r\n                        background: '#689f38',\r\n                        width: \"80%\",\r\n                    }}>\r\n                    Historia dostaw\r\n                </Typography>\r\n\r\n                <Typography className={classes.autocom} sx={{ boxShadow: 3 }}>\r\n                    <DataGrid\r\n                        rows={tableData}\r\n                        columns={columns}\r\n                    />\r\n                </Typography>\r\n                \r\n                <PopupDeliveryInfo                    \r\n                    openPopupDelivery={openPopupDelivery}\r\n                    setOpenPopupDelivery={setOpenPopupDelivery}\r\n                    delivery={history}                    \r\n                    >\r\n                </PopupDeliveryInfo>\r\n\r\n            </Typography>\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import { Dialog, DialogContent, DialogTitle } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport DescriptionOutlinedIcon from '@mui/icons-material/DescriptionOutlined';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { variables } from '../../Variables';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport InputMask from \"react-input-mask\";\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: '900px',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        border: 1,\r\n        borderRadius: '15px',\r\n        borderColor: '#7986cb',\r\n    }\r\n})\r\n\r\nexport default function PopupDeliveryInfo(props) {\r\n    const classes = useStyles()\r\n    const { openPopupAddDelivery, setOpenPopupAddDelivery } = props;\r\n    const [tableDataUsers, setTableDataUsers] = useState([])\r\n    //const [value, setValue] = useState(new Date());\r\n    const [valueUser, setValueUser] = useState(tableDataUsers[0]);\r\n    const [delivery, setDelivery] = useState();\r\n    const location = useLocation()\r\n\r\n\r\n    // function validateForm() {\r\n\r\n    //     return delivery.year;\r\n\r\n    //   }\r\n\r\n    useEffect(() => {\r\n        fetch(variables.API_URL_USERS)\r\n            .then((data) => data.json())\r\n            .then((data) => setTableDataUsers(data))\r\n    }, []);\r\n\r\n    const handleClose = () => {\r\n        setOpenPopupAddDelivery(false);\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n\r\n        let name = event.target.id;\r\n\r\n\r\n        if (name.includes('clear-on-escape-option')) name = 'userId'\r\n\r\n        setDelivery({\r\n\r\n            ...delivery,\r\n\r\n            [name]: newValue?.id ?? event.target.value,\r\n\r\n\r\n        });\r\n\r\n    };\r\n    function refreshPage(){ \r\n        window.location.reload(); \r\n    }\r\n    const save = async () => {\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(delivery),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        fetch(variables.API_URL_DELIVERY_CREATE, options).then(handleClose()).then(refreshPage)\r\n    }\r\n    console.log(delivery, \"newDelivery\")\r\n\r\n\r\n    return (\r\n        <Dialog open={openPopupAddDelivery}\r\n            fullWidth\r\n            maxWidth=\"lg\"\r\n        >\r\n            <Button\r\n                sx={{ width: '90px', height: '35px' }}\r\n                type=\"submit\" color=\"error\" variant=\"contained\"\r\n                onClick={handleClose}>\r\n                Anuluj\r\n            </Button>\r\n\r\n            <DialogTitle style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n            }}>\r\n                <div>\r\n                    <h2> Dodaj nową dostawę </h2>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent sx={{\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n            }}>\r\n                <Typography\r\n                    component={'span'}\r\n                    className={classes.contc}\r\n                    p={1}\r\n                    sx={{ boxShadow: 3 }}  >\r\n\r\n                    <Typography component={'span'}>\r\n\r\n\r\n                        <Autocomplete\r\n\r\n                            id=\"clear-on-escape\"\r\n                            value={valueUser}\r\n\r\n                            noOptionsText=\"Nie ma takiego użytkownika\"\r\n                            clearOnEscape\r\n                            options={tableDataUsers}\r\n                            getOptionLabel={(option) => option.fullName}\r\n                            sx={{ m: 1.5, width: 350 }}\r\n                            onChange={handleChange}\r\n                            renderInput={(params) => <TextField\r\n                                {...params} label=\"Nazwa szkoły\" />} />\r\n\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                            <Stack spacing={3} sx={{ m: 1.5, width: '350px' }}>\r\n<input type=\"date\" id=\"deliveryDate\" name=\"deliveryDate\" \r\n                                                     onChange={handleChange}\r\n\r\n                            />\r\n                                {/* <DatePicker\r\n                                    id=\"deliveryDate\"\r\n                                    type=\"datetime-local\"\r\n                                    // mask='__/__/____'\r\n                                    // views={['day']}\r\n                                    label=\"Termin dostawy\"\r\n                                    value={value}\r\n                                    onChange={async (newValue) => {\r\n                                        setValue(newValue)\r\n                                        setDelivery({\r\n\r\n                                            ...delivery,\r\n                                \r\n                                            date: value,\r\n                                \r\n                                        });\r\n\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} helperText={null} />}\r\n                                /> */}\r\n                            </Stack>\r\n                        </LocalizationProvider>\r\n\r\n                        \r\n\r\n\r\n                        <TextField\r\n                            id=\"description\"\r\n                            value={delivery?.description}\r\n                            onChange={handleChange}\r\n\r\n                            sx={{ m: 1.5, width: '350px' }}\r\n                            label=\"Uwagi\"\r\n                            placeholder='Uwagi'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <DescriptionOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n\r\n                    </Typography>\r\n\r\n                    <Typography component={'span'}>\r\n                        <InputMask\r\n                            mask=\"9999/9999\"\r\n\r\n                            value={delivery?.year}\r\n                            maskChar=\" \"\r\n                            onChange={handleChange}\r\n                        >\r\n                            {() =>  <TextField\r\n                            id=\"year\"\r\n                            //value={delivery?.year}\r\n                            //onChange={handleChange}\r\n\r\n                            sx={{ m: 1.5, width: '350px' }}\r\n                            label=\"Rok szkolny\"\r\n                            placeholder='Rok szkolny'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <DescriptionOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' /> }\r\n\r\n                            </InputMask>\r\n\r\n                        <TextField\r\n                            id=\"semestr\"\r\n                            value={delivery?.semestr}\r\n                            onChange={handleChange}\r\n                            type='number'\r\n\r\n                            sx={{ m: 1.5, width: '350px' }}\r\n                            label=\"semestr\"\r\n                            placeholder='semestr'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <DescriptionOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n\r\n                             \r\n                             <TextField\r\n                            id=\"week\"\r\n                            value={delivery?.week}\r\n                            onChange={handleChange}\r\n                            type='number'\r\n                            sx={{ m: 1.5, width: '350px' }}\r\n                            label=\"Tydzień\"\r\n                            placeholder='Tydzień'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <DescriptionOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n\r\n                        {/* <Autocomplete\r\n                            options={yearOptions}\r\n\r\n                            clearOnEscape\r\n                            disablePortal\r\n                            getOptionLabel={(option) => option.label}\r\n                            id=\"year\"\r\n                            noOptionsText=\"Ten rok nie jest jeszcze dostępny\"\r\n                            sx={{ m: 2, width: 350 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Rok szkolny\" />}\r\n                        />\r\n\r\n                        <Autocomplete\r\n                            value={valueSemestr}\r\n\r\n                            options={semestrOptions}\r\n                            getOptionLabel={(option) => option.semestr}\r\n                            onChange={handleChange}\r\n\r\n                            clearOnEscape\r\n                            disablePortal\r\n                            id=\"semestr\"\r\n                            noOptionsText=\"Nie ma takiego semestru\"\r\n                            sx={{ m: 2, width: 350 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Semestr\" />}\r\n                        />\r\n\r\n                        <Autocomplete\r\n                            options={weekOptions}\r\n\r\n                            clearOnEscape\r\n                            disablePortal\r\n                            getOptionLabel={(option) => option.label}\r\n\r\n                            id=\"week\"\r\n                            noOptionsText=\"Nie ma takiego tygodnia\"\r\n                            sx={{ m: 2, width: 350 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Tydzień\" />}\r\n                        /> */}\r\n\r\n                        <Typography sx={{\r\n                            display: \"flex\",\r\n                            justifyContent: 'flex-end'\r\n                        }}>\r\n                            <Button\r\n                                sx={{ width: '120px', height: '40px' }}\r\n                                type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                                onClick={save}\r\n                                // disabled={!validateForm()}\r\n                            >\r\n                                Akceptuj\r\n                            </Button>\r\n                        </Typography>\r\n\r\n                    </Typography>\r\n                </Typography>\r\n            </DialogContent>\r\n        </Dialog>\r\n\r\n\r\n    )\r\n}\r\n\r\n// const yearOptions = [\r\n//     { label: '2020 / 2021' },\r\n//     { label: '2021 / 2022' },\r\n//     { label: '2022 / 2023' },\r\n//     { label: '2023 / 2024' },\r\n// ]\r\n\r\n// const semestrOptions = [\r\n//     { semestr: '1', id: 1 },\r\n//     { semestr: '2',  id: 2 }\r\n// ]\r\n\r\n// const weekOptions = [\r\n//     { label: '1' }, { label: '2' }, { label: '3' }, { label: '4' }, { label: '5' }, { label: '6' }, { label: '7' }, { label: '8' }, { label: '9' }, { label: '10' },\r\n//     { label: '11' }, { label: '12' }, { label: '13' }, { label: '14' }, { label: '15' }, { label: '16' }, { label: '17' }, { label: '18' }, { label: '19' }, { label: '20' },\r\n//     { label: '21' }, { label: '22' }, { label: '23' }, { label: '24' }, { label: '25' }, { label: '26' }, { label: '27' }, { label: '28' }, { label: '29' }, { label: '30' },\r\n//     { label: '31' }, { label: '32' }, { label: '33' }, { label: '34' }, { label: '35' }, { label: '36' }, { label: '37' }, { label: '38' }, { label: '39' }, { label: '40' },\r\n//     { label: '41' }, { label: '42' }, { label: '43' }, { label: '44' }, { label: '45' }, { label: '46' }, { label: '47' }, { label: '48' }, { label: '49' }, { label: '50' },\r\n//     { label: '51' }, { label: '52' }\r\n// ]\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { variables } from '../../Variables';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport { GridActionsCellItem } from '@mui/x-data-grid-pro';\r\nimport {DataGrid} from '@mui/x-data-grid';\r\nimport PopupDeliveryInfo from './PopupDeliveryInfo';\r\nimport PopupAddDelivery from './PopupAddDelivery';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: 'auto',\r\n        height: '500px',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: '15px',\r\n    },\r\n    autocom: {\r\n        display: \"flex\",\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        width: 'auto',\r\n        minWidth: '1000px',\r\n        height: '430px',\r\n        borderRadius: '15px',\r\n    }\r\n})\r\n\r\nexport default function AllDeliveryTable() {\r\n    const classes = useStyles()\r\n    const [tableData, setTableData] = useState([])\r\n    const [user, setUser] = useState([])\r\n    const [delivery, setDelivery] = useState([])\r\n    const [openPopupDelivery, setOpenPopupDelivery] = useState(false)\r\n    const [openPopupAddDelivery, setOpenPopupAddDelivery] = useState(false)\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {       \r\n        if(location.state.role === 'Szkola'){\r\n            fetch(variables.API_URL_DELIVERY_BROWSE + `/${location.state.id}`)\r\n            .then((data) => data.json())\r\n            .then((data) => setTableData(data))\r\n        }\r\n        if(location.state.role === 'Admin'){\r\n            fetch(variables.API_URL_DELIVERY_BROWSE)\r\n                .then((data) => data.json())\r\n                .then((data) => setTableData(data))\r\n        }  \r\n        console.log(user.roleId, \"role\")      \r\n    },[]); \r\n\r\n    function roleForm() {\r\n        if(location.state.role === 'Admin')\r\n        return 1;    \r\n      }\r\n      \r\n\r\n    const getInfo = async (id) => {\r\n        let element = tableData.find(el => el.id == id)\r\n        setDelivery(element)\r\n      }    \r\n\r\n    const columns = [\r\n        { field: 'deliveryDate', headerName: 'Data', width: 180 },\r\n        { field: 'year', headerName: 'Rok', width: 150 },\r\n        { field: 'userName', headerName: 'Nazwa', width: 180 },\r\n        { field: 'studentScore', headerName: 'Ilość', width: 80 },\r\n        { field: 'description', headerName: 'Opis', width: 180 },\r\n        { field: 'statusName', headerName: 'Status', width: 150 },      \r\n        {\r\n            field: 'actions',\r\n            type: 'actions',\r\n            width: 60,\r\n            headerName: 'Info',\r\n            cellClassName: 'actions',\r\n            getActions: (params) => {\r\n                return [\r\n                    <GridActionsCellItem\r\n                        icon={<InfoOutlinedIcon />}\r\n                        label=\"Info\"\r\n                        color=\"inherit\"\r\n                        onClick={async () => {\r\n                            await getInfo(params.id).then(() => {\r\n                                setOpenPopupDelivery(true);\r\n                            })\r\n                          }}\r\n                    />,\r\n                ];\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Container sx={{ padding: 3 }}  >\r\n\r\n            <Typography className={classes.contc} p={1}\r\n                sx={{ boxShadow: 10, border: 2, borderColor: '#c5cae9' }}  >\r\n\r\n                <Typography\r\n                    variant='h5'\r\n                    color='#e8eaf6'\r\n                    component='h2'\r\n                    align=\"center\"\r\n                    sx={{\r\n                        borderRadius: '15px',\r\n                        boxShadow: 5,\r\n                        background: '#689f38',\r\n                        width: \"80%\",\r\n                    }}>\r\n                    Wszystkie dostawy\r\n                                   \r\n                   <Button disabled={!roleForm()}>\r\n                        <AddCircleOutlineOutlinedIcon onClick={() => setOpenPopupAddDelivery(true)} />                    \r\n                    </Button>\r\n                    \r\n                </Typography>\r\n\r\n                <Typography className={classes.autocom} sx={{ boxShadow: 3 }}>\r\n                    <DataGrid\r\n                        rows={tableData}\r\n                        columns={columns}\r\n                    />\r\n                </Typography>\r\n\r\n                <PopupDeliveryInfo                    \r\n                    openPopupDelivery={openPopupDelivery}\r\n                    setOpenPopupDelivery={setOpenPopupDelivery}\r\n                    delivery={delivery}                    \r\n                    >\r\n                </PopupDeliveryInfo>\r\n\r\n                <PopupAddDelivery openPopupAddDelivery={openPopupAddDelivery}\r\n                    setOpenPopupAddDelivery={setOpenPopupAddDelivery}  />\r\n\r\n            </Typography>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport PlaningDeliveryTable from '../Components/DeliveryPage/PlaningDeliveryTable';\r\nimport HistoryDeliveryTable from '../Components/DeliveryPage/HistoryDeliveryTable';\r\nimport AllDeliveryTable from '../Components/DeliveryPage/AllDeliveryTable';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    mess: {    \r\n        display: 'flex',\r\n        direction: 'column',\r\n        flexFlow: 'stretch',  \r\n        margin: 50, \r\n        background: 'white',  \r\n    },\r\n    hist: {    \r\n        display: 'flex',\r\n        direction: 'row',\r\n        flexFlow: 'stretch',  \r\n        margin: 50, \r\n        background: 'white',   \r\n    }\r\n    \r\n})\r\n\r\nexport default function Delivery({props}) {\r\n    const classes = useStyles()\r\n    const {id} = useParams(props);\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <Typography sx={{mt:3}}>\r\n                <Typography className={classes.hist}>\r\n                    <HistoryDeliveryTable id={id} />\r\n                    <PlaningDeliveryTable id={id} />\r\n                </Typography>\r\n\r\n                    <AllDeliveryTable id={id} />\r\n\r\n            </Typography>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import { Dialog, DialogContent, DialogTitle } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { variables } from '../../Variables';\r\nimport ModeEditOutlineOutlinedIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport axios from \"axios\";\r\nimport Input from '@mui/material/Input';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: '500px',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        border: 1,\r\n        borderRadius: '15px',\r\n        borderColor: '#7986cb',\r\n    },\r\n    autocom: {\r\n        display: \"flex\",\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        width: '350px'\r\n    }\r\n})\r\n\r\nexport default function PopupNewFile(props) {\r\n\r\n    const classes = useStyles()\r\n    const { openPopupFile, setOpenPopupFile } = props;\r\n    const [tableDataUsers, setTableDataUsers] = useState([])\r\n    const [valueUser, setValueUser] = useState(tableDataUsers[0]);\r\n    const [fileDetails, setFileDetails] = useState();\r\n\r\n\r\n    const [file, setFile] = useState(false);\r\n\r\n    const handleInputChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    const upload = (e) => {\r\n        let formData = new FormData();\r\n        formData.append(\"files\", file);\r\n\r\n        formData.append(\"name\", fileDetails.name);\r\n        formData.append(\"userId\", fileDetails.userId);\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: variables.API_URL_DOCUMENTS_NEWUPLOAD,\r\n            data: formData\r\n\r\n        }).then(({ data }) => {\r\n            console.log(\"Succesfully uploaded: \", JSON.stringify(data));\r\n        }).then(handleClose());            \r\n\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n\r\n        let name = event.target.id;\r\n\r\n        if (name.includes('clear-on-escape-option')) name = 'userId'\r\n\r\n        setFileDetails({\r\n\r\n            ...fileDetails,\r\n\r\n            [name]: newValue?.id ?? event.target.value,\r\n\r\n        });\r\n    };   \r\n\r\n    const handleClose = () => {\r\n        setOpenPopupFile(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(variables.API_URL_USERS)\r\n            .then((data) => data.json())\r\n            .then((data) => setTableDataUsers(data))\r\n        }, []);\r\n\r\n   \r\n    return (\r\n        <Dialog open={openPopupFile}\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n        >\r\n            <Button\r\n                sx={{ width: '90px', height: '35px' }}\r\n                type=\"submit\" color=\"error\" variant=\"contained\"\r\n                onClick={handleClose}>\r\n                Anuluj\r\n            </Button>\r\n\r\n            <DialogTitle style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n            }}>\r\n                <div>\r\n                    <h2> Dodaj nowy dokument </h2>\r\n                </div>\r\n            </DialogTitle>            \r\n\r\n            <DialogContent sx={{\r\n                display: \"flex\",\r\n                justifyContent: 'center'\r\n            }}>\r\n\r\n                <Typography\r\n                    className={classes.contc}\r\n                    p={3}\r\n                    sx={{ boxShadow: 3 }}  >\r\n\r\n                    <Typography>\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Input\r\n                                type=\"file\" onChange={handleInputChange}\r\n                                accept=\"pdf/*\" id=\"contained-button-file\" \r\n                                sx={{m:1}}/>\r\n                        </label>\r\n\r\n                        <TextField\r\n                            id=\"name\"\r\n                            value={fileDetails?.name?? \"\"}\r\n                            onChange={handleChange}\r\n\r\n                            sx={{ m: 1, width: '350px' }}\r\n                            label=\"Nazwa pliku\"\r\n                            placeholder='Nazwa pliku'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <ModeEditOutlineOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n\r\n                        <Autocomplete\r\n\r\n                            id=\"clear-on-escape\"\r\n                            value={valueUser}\r\n\r\n                            noOptionsText=\"Nie ma takiego użytkownika\"\r\n                            clearOnEscape\r\n                            options={tableDataUsers}\r\n                            getOptionLabel={(option) => option.fullName}\r\n                            sx={{ m: 1, width: 350 }}\r\n                            onChange={handleChange}\r\n                            renderInput={(params) => <TextField\r\n                                {...params} label=\"Nazwa szkoły\" />} />\r\n\r\n\r\n                        <Typography sx={{\r\n                            display: \"flex\",\r\n                            justifyContent: 'flex-end'\r\n                        }}>\r\n                            <Button\r\n                                sx={{ width: '120px', height: '40px', mt: 2 }}\r\n                                type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                                onClick={upload}\r\n                            // disabled={!validateForm()}\r\n                            >Wyślij</Button>\r\n                        </Typography>\r\n\r\n                    </Typography>\r\n\r\n                    <Typography>\r\n                        \r\n\r\n                    </Typography>\r\n\r\n\r\n                </Typography>\r\n\r\n            </DialogContent>\r\n\r\n\r\n        </Dialog>\r\n\r\n\r\n    )\r\n}","import { Dialog, DialogContent, DialogTitle } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { variables } from '../../Variables';\r\nimport ModeEditOutlineOutlinedIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport axios from \"axios\";\r\nimport Input from '@mui/material/Input';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: '500px',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        border: 1,\r\n        borderRadius: '15px',\r\n        borderColor: '#7986cb',\r\n    },\r\n    autocom: {\r\n        display: \"flex\",\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        width: '350px'\r\n    }\r\n})\r\n\r\nexport default function PopupUpdateFile(props) {\r\n\r\n    const classes = useStyles()\r\n    const { openPopupFileUpdate, setOpenPopupFileUpdate, file} = props;\r\n    const [newFile, setFile] = useState(false);\r\n\r\n    const handleInputChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n    \r\n        const upload = (e) => {\r\n            let formData = new FormData();\r\n            formData.append(\"files\", newFile);\r\n        \r\n            axios({\r\n                method: \"put\",\r\n                url: variables.API_URL_DOCUMENTS_UPDATE+`/${file.id}`,\r\n                data: formData\r\n    \r\n            }).then(({ data }) => {\r\n                console.log(\"Succesfully uploaded: \", JSON.stringify(data));\r\n            }).then(handleClose());            \r\n    \r\n        };\r\n    \r\n\r\n    const handleClose = () => {\r\n        setOpenPopupFileUpdate(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog open={openPopupFileUpdate}\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n        >\r\n            <Button\r\n                sx={{ width: '90px', height: '35px' }}\r\n                type=\"submit\" color=\"error\" variant=\"contained\"\r\n                onClick={handleClose}>\r\n                Anuluj\r\n            </Button>\r\n\r\n            <DialogTitle style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n            }}>\r\n                <div>\r\n                    <h2> Odeślij dokument </h2>\r\n                </div>\r\n            </DialogTitle>            \r\n\r\n            <DialogContent sx={{\r\n                display: \"flex\",\r\n                justifyContent: 'center'\r\n            }}>\r\n\r\n                <Typography\r\n                    className={classes.contc}\r\n                    p={3}\r\n                    sx={{ boxShadow: 3 }}  >\r\n\r\n                    <Typography>\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Input\r\n                                type=\"file\" onChange={handleInputChange}\r\n                                accept=\"pdf/*\" id=\"contained-button-file\" color='secondary' \r\n                                sx={{m:1}}/>    \r\n                        </label>\r\n                       \r\n                        <Typography sx={{\r\n                            display: \"flex\",\r\n                            justifyContent: 'flex-end'\r\n                        }}>\r\n                            <Button\r\n                                sx={{ width: '120px', height: '40px', mt: 2 }}\r\n                                type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                                onClick={upload}\r\n                            // disabled={!validateForm()}\r\n                            >Wyślij</Button>\r\n                        </Typography>\r\n\r\n                    </Typography>\r\n\r\n                    <Typography>\r\n                        \r\n\r\n                    </Typography>\r\n\r\n\r\n                </Typography>\r\n\r\n            </DialogContent>\r\n\r\n\r\n        </Dialog>\r\n\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Button, Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { variables } from '../../Variables';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport { styled } from '@mui/material/styles';\r\nimport PopupNewFile from './PopupNewFile';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PopupUpdateFile from './PopupUpdateFile';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        flexWrap:\"wrap\",\r\n        borderRadius: '15px',\r\n    }\r\n})\r\n\r\nexport default function FilesForm() {\r\n    const [filesData, setFilesData] = useState([])\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    const classes = useStyles()\r\n    const [user, setUser] = useState([])\r\n    const [openPopupFile, setOpenPopupFile] = useState(false)\r\n    const [openPopupFileUpdate, setOpenPopupFileUpdate] = useState(false)\r\n    const [file, setFile] = useState()\r\n\r\n\r\n    const location = useLocation()\r\n\r\n    const Input = styled('input')({\r\n        display: 'none',\r\n      });\r\n\r\n        useEffect(() => {       \r\n            if(location.state.role === 'Szkola'){\r\n                fetch(variables.API_URL_DOCUMENTS_USER + `/${location.state.id}`)\r\n                .then((data) => data.json())\r\n                .then((data) => setFilesData(data))\r\n            }\r\n            if(location.state.role === 'Admin'){\r\n                fetch(variables.API_URL_DOCUMENTS_USER)\r\n                    .then((data) => data.json())\r\n                    .then((data) => setFilesData(data))\r\n            }  \r\n        },[]); \r\n\r\n    function roleForm() {\r\n        if(location.state.role === 'Admin')\r\n        return 1;    \r\n      }\r\n\r\n      const getInfo = async (id) => {\r\n        let element = filesData.find(el => el.id == id)\r\n        setFile(element)\r\n      }\r\n    \r\n    const download = React.useCallback(\r\n        (id) => () => {\r\n\r\n            const options = {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          };\r\n      \r\n          fetch(variables.API_URL_DOCUMENTS_DOWNLOAD + `/${id}`, options)\r\n          .then((response) => response.blob())\r\n          .then((blob) => {\r\n            const url = window.URL.createObjectURL(\r\n              new Blob([blob]),\r\n            );\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute(\r\n              'download',\r\n              `document.pdf`,\r\n            );\r\n        \r\n            document.body.appendChild(link);\r\n        \r\n            link.click();\r\n        \r\n            link.parentNode.removeChild(link);              \r\n          })\r\n        },\r\n      );\r\n    \r\n    return (\r\n        <Container sx={{ padding: 3 }}  >\r\n            <Typography>\r\n                <Button sx={{ borderRadius: '55px', m: 1 }}\r\n                    component=\"span\" type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                    onClick={() => setOpenPopupFile(true)}\r\n                    disabled={!roleForm()}\r\n                    >\r\n                    <AddCircleOutlineOutlinedIcon sx={{ fontSize: 25, mr: 1 }} />\r\n                    Dodaj\r\n                </Button>\r\n            </Typography>                        \r\n\r\n            <Typography component=\"span\" sx={{ display:\"flex\", justifyContent: 'space-around', alignItems:'stretch', flexDirection: 'row', flexWrap:\"wrap\"}}>    \r\n            \r\n                {filesData.map((file) => {\r\n                    return (\r\n                        <Typography component=\"span\" sx={{ padding: 3 }} >\r\n\r\n                            <Typography className={classes.contc} p={1}\r\n                                sx={{ boxShadow: 10, border: 2,  \r\n                                borderColor: file.statusName == \"Zrealizowano\" ?  \"#b2ff59\" : \"#ffeb3b\",\r\n                                background: file.statusName == \"Zrealizowano\" ? \"#b2ff59\" : \"#ffeb3b\" }} >\r\n                                <Avatar alt=\"file\" src=\"grafika_dok.png\" sx={{ width: 180, height: 160, m: 1 }} />\r\n\r\n                                <Typography sx={{display:\"flex\", justifyContent: 'space-around',flexDirection: 'column', m: 1 }}>\r\n                                    <h4>{file.name}</h4>\r\n                                    <Typography>\r\n                                        <h7>Data: {file.updateDate}</h7>\r\n                                        <h6>{file.statusName}</h6>\r\n                                    </Typography>\r\n                                    <Typography sx={{display:\"flex\", justifyContent:'flex-end'}}>\r\n                                        <Button sx={{ width: '80px', height: '25px', mr: 2 }}\r\n                                            type=\"submit\" color=\"info\" variant=\"contained\"\r\n                                            onClick={download(file.id)}\r\n                                            >\r\n                                            Pobierz\r\n                                        </Button>\r\n                                            <Button sx={{ width: '80px', height: '25px'}}\r\n                                            type=\"submit\" color=\"success\" variant=\"contained\" component=\"span\"\r\n                                            disabled={file.statusName == \"Zrealizowano\"}\r\n                                            onClick={async () => {\r\n                                                await getInfo(file.id).then(() => {\r\n                                                    setOpenPopupFileUpdate(true);                                                    \r\n                                                })\r\n                                              }}\r\n                                            >\r\n                                            Odeślij\r\n                                        </Button>                                        \r\n                                    </Typography>\r\n                                </Typography>\r\n\r\n                            </Typography>\r\n\r\n                        </Typography>\r\n\r\n\r\n                    )\r\n                })}\r\n\r\n        </Typography>\r\n\r\n        <PopupNewFile\r\n          openPopupFile={openPopupFile}\r\n          setOpenPopupFile={setOpenPopupFile}>\r\n        </PopupNewFile>\r\n\r\n        <PopupUpdateFile\r\n          openPopupFileUpdate={openPopupFileUpdate}\r\n          setOpenPopupFileUpdate={setOpenPopupFileUpdate}\r\n          file={file}>\r\n        </PopupUpdateFile>\r\n\r\n        </Container >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport FilesForm from '../Components/Files/FilesForm';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    mess: {    \r\n        display: 'flex',\r\n        direction: 'row',\r\n        flexFlow: 'stretch',  \r\n        background: 'white',   \r\n    }    \r\n})\r\n\r\nexport default function Files(props) {\r\n    const classes = useStyles()\r\n    const {id} = useParams(props);\r\n\r\n\r\n    return (\r\n        <Container>\r\n           \r\n            <Typography className={classes.mess} sx={{mt:3}}>\r\n                <FilesForm id={id}/>\r\n            </Typography>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import { Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport BadgeOutlinedIcon from '@mui/icons-material/BadgeOutlined';\r\nimport PeopleOutlinedIcon from '@mui/icons-material/PeopleOutlined';\r\nimport PhoneOutlinedIcon from '@mui/icons-material/PhoneOutlined';\r\nimport AlternateEmailOutlinedIcon from '@mui/icons-material/AlternateEmailOutlined';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport {variables} from '../../Variables';\r\nimport EditRoadOutlinedIcon from '@mui/icons-material/EditRoadOutlined';\r\nimport HomeOutlinedIcon from '@mui/icons-material/HomeOutlined';\r\nimport LocationCityOutlinedIcon from '@mui/icons-material/LocationCityOutlined';\r\nimport InputMask from \"react-input-mask\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        border: 1,\r\n        borderRadius: '15px',\r\n        borderColor: '#7986cb',\r\n\r\n    },\r\n    tekstbox: {\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n    }\r\n})\r\n\r\nexport default function Popup(props) {\r\n    const classes = useStyles()\r\n    const { openPopup, setOpenPopup} = props;\r\n    const [dataTown, setDataTown] = useState([])\r\n    const [user, setNewUser] = useState();\r\n    const [value, setValue] = useState(dataTown[0]);\r\n    const location = useLocation()\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpenPopup(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(variables.API_URL_TOWNS)\r\n        .then((data) => data.json())\r\n        .then((data) => setDataTown(data))\r\n    }, []);\r\n\r\n    const [values, setValues] = useState({\r\n        password: '',\r\n        showPassword: false,\r\n\r\n        fullName:'',\r\n        shortName: '',\r\n        studentScore: '',\r\n        street: '',\r\n        number: '',\r\n        code: '',\r\n        phone:'',\r\n        email: '',      \r\n        townId:'',\r\n        \r\n    });\r\n\r\n    const handleChangePass = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        console.log(values.password, \"hasło\")\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({\r\n            ...values,\r\n            showPassword: !values.showPassword,\r\n        });\r\n    };\r\n\r\n    function validateForm() {\r\n\r\n        return values.fullName && values.shortName && values.studentScore && values.street && values.number && values.code && values.phone && values.email && values.password  \r\n    \r\n    }\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n\r\n        let name = event.target.id;\r\n\r\n        if (name.includes('clear-on-escape-option') ) name = 'townId'\r\n     \r\n\r\n        setValues({\r\n\r\n            ...values,\r\n            [name]: newValue ?? event.target.value,\r\n\r\n        });\r\n\r\n     //   values.townId = 'townId'\r\n\r\n    };\r\n    console.log(user, \"newUser\")\r\n\r\n    function refreshPage(){ \r\n        window.location.reload(); \r\n    }\r\n\r\n    const save = async () => {\r\n        const registy = {\r\n            fullName: values.fullName,\r\n            shortName: values.shortName,\r\n            studentScore: values.studentScore,\r\n            street: values.street,\r\n            number: values.number,\r\n            code: values.code,\r\n            phone: values.phone,\r\n            email: values.email,    \r\n            townId: values.townId.id,\r\n            password: values.password,\r\n        }\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(registy),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        fetch(variables.API_URL_USERS_REGISTER, options).then(()=>{\r\n            setNewUser()\r\n        }).then(handleClose())\r\n        //.then(refreshPage);\r\n\r\n        console.log(registy, \"nowyUser\")\r\n\r\n    };    \r\n\r\n    return (\r\n        <Dialog open={openPopup}\r\n            fullWidth\r\n            maxWidth=\"lg\"\r\n        >\r\n            <Button\r\n                sx={{ width: '90px', height: '35px' }}\r\n                type=\"submit\" color=\"error\" variant=\"contained\"\r\n                onClick={handleClose}>\r\n                Anuluj\r\n            </Button>\r\n\r\n            <DialogTitle style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n            }}>\r\n                <div>\r\n                    <h1> Dodaj nową szkołę </h1>\r\n                </div>\r\n            </DialogTitle>\r\n\r\n            <DialogContent sx={{\r\n                display: \"flex\",\r\n                justifyContent: 'center'\r\n            }}>\r\n\r\n\r\n                <Typography\r\n                    className={classes.contc}\r\n                    p={2}\r\n                    sx={{ boxShadow: 3 }}  >\r\n\r\n                    <Typography>\r\n\r\n                        <TextField\r\n                        id=\"fullName\"\r\n                        // value={user?.fullName??\"\"}\r\n                        value={values.fullName}\r\n                        onChange={handleChange}\r\n\r\n                            sx={{ m: 1, width: '350px' }}\r\n                            label=\"Pełna nazwa szkoły\"\r\n                            placeholder='Pełna nazwa szkoły'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <BadgeOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n                        <TextField\r\n                        id=\"shortName\"\r\n                        //value={user?.shortName??\"\"}\r\n                        value={values.shortName}\r\n\r\n                        onChange={handleChange}\r\n\r\n                            sx={{ m: 1, width: '350px' }}\r\n                            label=\"Skrócona nazwa szkoły\"\r\n                            placeholder='Skrócona nazwa szkoły'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircle />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n                        <TextField\r\n                        id=\"studentScore\"\r\n                        //value={user?.studentScore??\"\"}\r\n                        value={values.studentScore}\r\n                        type='number'\r\n\r\n                        onChange={handleChange}\r\n\r\n                            sx={{ m: 1, width: '350px' }}\r\n                            label=\"Ilość uczniów\"\r\n                            placeholder='Ilość uczniów'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <PeopleOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n\r\n                    </Typography>\r\n                    <Typography>\r\n                    <TextField\r\n                    id=\"street\"\r\n                    //value={user?.street??\"\"}\r\n                    value={values.street}\r\n\r\n                    onChange={handleChange}\r\n\r\n                            sx={{ m: 1, width: '320px' }}\r\n                            label=\"Nazwa ulicy\"\r\n                            placeholder='Nazwa ulicy'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <EditRoadOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n\r\n\r\n                        <TextField\r\n                        id=\"number\"\r\n                        //value={user?.number??\"\"}\r\n                        value={values.number}\r\n                        type='number'\r\n\r\n                        onChange={handleChange}\r\n\r\n                            sx={{ m: 1, mt:2, width: '150px' }}\r\n                            label=\"Numer budynku\"\r\n                            placeholder='Numer budynku'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <HomeOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n                        <InputMask\r\n                            mask=\"99999\"\r\n                            value={values.code}\r\n                            onChange={handleChange}\r\n                            maskChar=\" \"\r\n                        >\r\n                            {() =>\r\n                                <TextField\r\n                                    id=\"code\"\r\n                                    //value={user?.code??\"\"}\r\n                                    // value={values.code}\r\n                                    // onChange={handleChange}\r\n\r\n                                    sx={{ m: 1, mt: 2, width: '150px' }}\r\n                                    label=\"Kod pocztowy\"\r\n                                    placeholder='Kod pocztowy'\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <LocationCityOutlinedIcon />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                    color='secondary' />}\r\n                        </InputMask>\r\n\r\n                            <Typography className={classes.autocom}>\r\n                            <Autocomplete\r\n                            value={values.townId}\r\n\r\n                            onChange={handleChange}\r\n\r\n                                id=\"clear-on-escape\"\r\n                                clearOnEscape\r\n                                options={dataTown}\r\n                                getOptionLabel={(option) => option.name}\r\n                                noOptionsText=\"Dodaj nowe miasto\"\r\n                                sx={{ ml: 1, mb: 1, width: 320 }}\r\n                                renderInput={(params) => <TextField\r\n                                    helperText=\"Wybierz nazwę miasta z listy\"\r\n                                    {...params} label=\"Nazwa miasta\" variant=\"standard\" />} />                                                \r\n                        </Typography>    \r\n                        <Typography sx={{\r\n                            display: \"flex\",\r\n                            justifyContent: 'center'\r\n                        }} mt={5}>\r\n                            <Button\r\n                                sx={{ width: '120px', height: '40px' }}\r\n                                type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                                disabled = {!validateForm()}\r\n                                onClick={save}\r\n\r\n                            >Utwórz</Button>\r\n                        </Typography>         \r\n                    </Typography>\r\n\r\n                    <Typography ml={2}>\r\n\r\n                        <InputMask\r\n                            mask=\"999999999\"\r\n                            value={values.phone}\r\n                            onChange={handleChange}\r\n                            maskChar=\" \"\r\n                        >\r\n                            {() =>\r\n                                <TextField\r\n                                    id=\"phone\"\r\n                                    //value={user?.phone??\"\"}\r\n                                    //value={values.phone}\r\n                                    //type='number'\r\n                                    onChange={handleChange}\r\n\r\n                                    sx={{ m: 1, width: '350px' }}\r\n                                    label=\"Telefon kontaktowy\"\r\n                                    placeholder='Telefon kontaktowy'\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <PhoneOutlinedIcon />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                    color='secondary' />}\r\n                        </InputMask>\r\n\r\n                        <TextField\r\n                        id=\"email\"\r\n                        //value={user?.email??\"\"}\r\n                        value={values.email}\r\n\r\n                        onChange={handleChange}\r\n                        \r\n                            sx={{ m: 1, width: '350px' }}\r\n                            label=\"Adres e-mail\"\r\n                            placeholder='Adres e-mail'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AlternateEmailOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n                        <TextField\r\n                        id=\"password\"\r\n                        value={values.password}\r\n                        \r\n                            sx={{ m: 1, width: '350px' }}\r\n                            label=\"Hasło\"\r\n                            type={values.showPassword ? 'text' : 'password'}\r\n\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                        \r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />      \r\n                                             \r\n\r\n                    </Typography>\r\n                  \r\n\r\n                </Typography>                \r\n\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n","import { Dialog, DialogContent, DialogTitle } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { variables } from '../../Variables';\r\nimport LocationCityOutlinedIcon from '@mui/icons-material/LocationCityOutlined';\r\nimport InputMask from \"react-input-mask\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: '800px',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        border: 1,\r\n        borderRadius: '15px',\r\n        borderColor: '#7986cb',\r\n    }\r\n})\r\n\r\n\r\nexport default function PopupMessage(props) {\r\n    const classes = useStyles()\r\n    const { openPopupEditUser, setOpenPopupEditUser, user } = props;\r\n    const [newUser, setNewUser] = useState();\r\n    const location = useLocation()\r\n\r\n    function refreshPage() {\r\n        window.location.reload();\r\n    }\r\n\r\n    function validateForm() {\r\n        return newUser?.studentScore && newUser?.fullName && newUser?.phone;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user)\r\n            setNewUser(user);\r\n    }, [user]);\r\n\r\n    const handleChange = (event) => {\r\n\r\n        const name = event.target.id;\r\n\r\n        setNewUser({\r\n\r\n            ...newUser,\r\n\r\n            [name]: event.target.value,\r\n\r\n        });\r\n    };\r\n    console.log(newUser, \"nowyUser\")\r\n\r\n    const handleClose = async () => {\r\n        setOpenPopupEditUser(false);\r\n    };\r\n\r\n    const updateUser = async () => {\r\n        const options = {\r\n            method: 'PUT',\r\n            body: JSON.stringify(newUser),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        fetch(variables.API_URL_USERS + \"/edit\" + `/${newUser.id}`, options)\r\n        .then(handleClose()).then(refreshPage);\r\n            \r\n    }\r\n\r\n    console.log(newUser, \"user\")\r\n\r\n    return (\r\n        <Dialog open={openPopupEditUser}\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n        >\r\n            <Button\r\n                sx={{ width: '90px', height: '35px' }}\r\n                type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                onClick={handleClose}>\r\n                Anuluj\r\n            </Button>\r\n\r\n            <DialogTitle style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n                marginBottom: 7,\r\n            }}>\r\n                <div>\r\n                    <h2> Edytuj dane użytkownika </h2>\r\n                </div>\r\n            </DialogTitle>\r\n\r\n            <DialogContent sx={{\r\n                display: \"flex\",\r\n                justifyContent: 'center'\r\n            }}>\r\n\r\n                <Typography\r\n                    className={classes.contc}\r\n                    p={5}\r\n                    sx={{ boxShadow: 3 }}  >\r\n\r\n                    <Typography>\r\n\r\n                        <TextField\r\n                            disabled\r\n                            sx={{ m: 1, width: '200px' }}\r\n                            label=\"ID\"\r\n                            placeholder='ID'\r\n                            color='secondary'\r\n                            value={user?.id}\r\n                        />\r\n\r\n                        <TextField\r\n                            sx={{ m: 1, mt: 2, width: '200px' }}\r\n                            label=\"Nazwa użytkownika\"\r\n                            placeholder='Nazwa użytkownika'\r\n                            color='secondary'\r\n                            value={newUser?.fullName}\r\n                            id=\"fullName\"\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                    </Typography>\r\n\r\n                    <Typography>\r\n\r\n                        <TextField\r\n                            sx={{ m: 1, mt: 2, width: '200px' }}\r\n                            label=\"Ilość uczniów\"\r\n                            placeholder='Ilość uczniów'\r\n                            value={newUser?.studentScore}\r\n                            id=\"studentScore\"\r\n                            onChange={handleChange}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <LocationCityOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n\r\n                        <InputMask\r\n                            mask=\"999999999\"\r\n                            value={newUser?.phone}\r\n                            maskChar=\" \"\r\n                            onChange={handleChange}\r\n                        >\r\n                            {() => <TextField\r\n                                sx={{ m: 1, mt: 2, width: '200px' }}\r\n                                label=\"Numer telefonu\"\r\n                                placeholder='Numer telefonu'\r\n                                value={newUser?.phone}\r\n                                id=\"phone\"\r\n                                onChange={handleChange}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <LocationCityOutlinedIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                color='secondary' />}\r\n                        </InputMask>\r\n\r\n                        <Typography sx={{\r\n                            display: \"flex\",\r\n                            justifyContent: 'flex-end'\r\n                        }}>\r\n                            <Button\r\n                                sx={{ width: '120px', height: '40px', mt: 2 }}\r\n                                type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                                onClick={updateUser}\r\n                                disabled={!validateForm()}\r\n                            >Akceptuj</Button>\r\n                        </Typography>\r\n\r\n                    </Typography>\r\n\r\n                </Typography>\r\n\r\n            </DialogContent>\r\n\r\n\r\n        </Dialog>\r\n\r\n\r\n    )\r\n}","import { Dialog, DialogContent, DialogTitle} from '@mui/material';\r\nimport React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport {  Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: '800px',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        border: 1,\r\n        borderRadius: '15px',\r\n        borderColor: '#7986cb',\r\n    }\r\n})\r\n\r\nexport default function PopupMessage(props) {\r\n    const classes = useStyles()\r\n    const {openPoupInfoUser, setOpenPoupInfoUser, user, dataTown} = props;\r\n\r\n    const handleClose = async () => {\r\n        setOpenPoupInfoUser(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog open={openPoupInfoUser}\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n        >\r\n            <Button\r\n                sx={{ width: '90px', height: '35px' }}\r\n                type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                onClick={handleClose}>\r\n                Anuluj\r\n            </Button>\r\n\r\n            <DialogTitle style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n                marginBottom: 7,\r\n            }}>\r\n                <div>\r\n                    <h2> Szczegóły użytkownika </h2>\r\n                </div>\r\n            </DialogTitle>\r\n\r\n            <DialogContent sx={{\r\n                display: \"flex\",\r\n                justifyContent: 'center'\r\n            }}>\r\n\r\n                <Typography\r\n                    className={classes.contc}\r\n                    p={5}\r\n                    sx={{ boxShadow: 3 }}  >\r\n\r\n                    <Typography>\r\n                       \r\n                        <h6>Id użytkownika: {user?.id}</h6>\r\n                        <h6>Nazwa użytkownika: {user?.fullName}</h6>\r\n                        <h6>Ilość uczniów: {user?.studentScore} </h6> \r\n                        <h6>Adres: ul. {dataTown?.street}  {dataTown?.number} , {dataTown?.townName}  </h6> \r\n                        <h6>Województwo: {dataTown?.province} </h6> \r\n                        <h6>Powiat: {dataTown?.district} </h6> \r\n                        <h6>Gmina: {dataTown?.commune} </h6> \r\n\r\n                    </Typography>\r\n\r\n                </Typography>\r\n                    \r\n            </DialogContent>\r\n\r\n        </Dialog>\r\n    );                         \r\n\r\n} ","import PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TextField from '@mui/material/TextField';\r\nimport {\r\n  DataGrid,\r\n  GridToolbarFilterButton,\r\n} from '@mui/x-data-grid';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { variables } from '../../Variables.js';\r\nimport { GridActionsCellItem } from '@mui/x-data-grid-pro';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\nimport { Button, Typography } from '@mui/material';\r\nimport PersonAddAlt1OutlinedIcon from '@mui/icons-material/PersonAddAlt1Outlined';\r\nimport PopupNewUser from './PopupNewUser';\r\nimport PopupEditUser from './PopupEditUser';\r\nimport PopupInfoUser from './PopupInfoUser';\r\n\r\n\r\nfunction escapeRegExp(value) {\r\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n\r\nfunction QuickSearchToolbar(props) {\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        p: 0.5,\r\n        pb: 0,\r\n        justifyContent: 'space-between',\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        flexWrap: 'wrap',\r\n      }}\r\n    >\r\n\r\n      <Typography sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        direction: 'column',\r\n        flexWrap: 'wrap',\r\n      }}>\r\n        {/* <TextField\r\n          variant=\"standard\"\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          placeholder=\"Wyszukaj...\"\r\n          InputProps={{\r\n            startAdornment: <SearchIcon fontSize=\"small\" />,\r\n            endAdornment: (\r\n              <IconButton\r\n                title=\"Clear\"\r\n                aria-label=\"Clear\"\r\n                size=\"small\"\r\n                style={{ visibility: props.value ? 'visible' : 'hidden' }}\r\n                onClick={props.clearSearch}\r\n              >\r\n                <ClearIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            ),\r\n          }}\r\n          sx={{\r\n            width: {\r\n              xs: 1,\r\n              sm: 'auto',\r\n            },\r\n            m: (theme) => theme.spacing(1, 0.5, 1.5),\r\n            '& .MuiSvgIcon-root': {\r\n              mr: 0.5,\r\n            },\r\n            '& .MuiInput-underline:before': {\r\n              borderBottom: 1,\r\n              borderColor: 'divider',\r\n            },\r\n          }}\r\n        /> */}\r\n        <div>\r\n          <GridToolbarFilterButton />\r\n        </div>\r\n      </Typography>\r\n      <div>\r\n        <Button sx={{ borderRadius: '55px' }} type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n          onClick={() => setOpenPopup(true)}>\r\n          <PersonAddAlt1OutlinedIcon sx={{ fontSize: 25 }} />\r\n          Dodaj nową szkołę\r\n        </Button>\r\n\r\n        <PopupNewUser\r\n          openPopup={openPopup}\r\n          setOpenPopup={setOpenPopup}>\r\n        </PopupNewUser>\r\n\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n\r\nQuickSearchToolbar.propTypes = {\r\n  clearSearch: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function QuickFilteringGrid() {\r\n\r\n  const [openPopupEditUser, setOpenPopupEditUser] = useState(false)\r\n  const [openPoupInfoUser, setOpenPoupInfoUser] = useState(false)\r\n \r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 80 },\r\n    { field: 'shortName', headerName: 'Nazwa Szkoły', width: 130 },\r\n    { field: 'fullName', headerName: 'Nazwa', width: 220 },\r\n    { field: 'studentScore', headerName: 'Uczniowie', width: 100 },\r\n    { field: 'phone', headerName: 'Telefon', width: 120 },\r\n    { field: 'email', headerName: 'E-mail', width: 170 },\r\n    { field: 'roleName', headerName: 'Rola', width: 90 },\r\n    {\r\n      field: 'actions',\r\n      type: 'actions',\r\n      headerName: 'Opcje',\r\n      width: 130,\r\n      cellClassName: 'actions',\r\n      getActions: (params) => {\r\n        return [\r\n          <GridActionsCellItem\r\n            icon={<InfoOutlinedIcon />}\r\n            label=\"Info\"\r\n            color=\"inherit\"\r\n            onClick={async () => {\r\n              await getInfo(params.id).then(() => {\r\n                setOpenPoupInfoUser(true);\r\n              })\r\n            }}\r\n          />,\r\n          <GridActionsCellItem\r\n            icon={<EditOutlinedIcon />}\r\n            label=\"Edit\"\r\n            className=\"textPrimary\"\r\n            onClick={async () => {\r\n              await getInfo(params.id).then(() => {\r\n                setOpenPopupEditUser(true);\r\n              })\r\n            }}\r\n            color=\"inherit\"\r\n          />,\r\n          <GridActionsCellItem\r\n            icon={<DeleteOutlineOutlinedIcon />}\r\n            label=\"Delete\"\r\n            onClick={deleteUser(params.id)}\r\n            color=\"inherit\"\r\n          />,\r\n\r\n        ];\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [tableData, setTableData] = useState([])\r\n  const [user, setUser] = useState()\r\n  const [searchText, setSearchText] = useState('');\r\n  const [rows, setRows] = useState(tableData.rows);\r\n  const [dataTown, setDataTown] = useState()\r\n\r\n  // const requestSearch = (searchValue) => {\r\n  //   setSearchText(searchValue);\r\n  //   const searchRegex = new RegExp(escapeRegExp(searchValue), 'i');\r\n  //   const filteredRows = tableData.rows.filter((row) => {\r\n  //     return Object.keys(row).some((field) => {\r\n  //       return searchRegex.test(row[field].toString());\r\n  //     });\r\n  //   });\r\n  //   setRows(filteredRows);\r\n  // };\r\n  \r\n  useEffect(() => {\r\n    setRows(tableData.rows);\r\n  }, [tableData.rows]);\r\n\r\n  function refreshPage() {\r\n    window.location.reload();\r\n}\r\n\r\n  const getInfo = async (id) => {\r\n    let element = tableData.find(el => el.id == id)\r\n    setUser(element)\r\n    console.log(element, \"elementUser\");\r\n\r\n    await fetch(variables.API_URL_ADRESS +`/${id}`)\r\n    .then((data) => data.json())\r\n    .then((data) => setDataTown(data));\r\n\r\n    console.log(dataTown, \"elementTown\");\r\n  }    \r\n\r\n  const deleteUser = React.useCallback(\r\n    (id) => () => {\r\n\r\n      const options = {\r\n        method: 'DELETE',\r\n  \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n  \r\n      fetch(variables.API_URL_USERS + `/${id}`, options).then(() => {\r\n        setTimeout(() => {\r\n          setTableData((prevRows) => prevRows.filter((row) => row.id !== id));\r\n        });\r\n      }).then(refreshPage)\r\n    },\r\n    [],\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch(variables.API_URL_USERS)\r\n      .then((data) => data.json())\r\n      .then((data) => setTableData(data))\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{\r\n      boxShadow: 4,\r\n      bgcolor: 'background.paper',\r\n      height: 500,\r\n      width: 1\r\n    }}>\r\n      <PopupEditUser\r\n        openPopupEditUser={openPopupEditUser}\r\n        setOpenPopupEditUser={setOpenPopupEditUser}\r\n        user={user}>\r\n      </PopupEditUser>\r\n\r\n      <PopupInfoUser\r\n        openPoupInfoUser={openPoupInfoUser}\r\n        setOpenPoupInfoUser={setOpenPoupInfoUser}\r\n        user={user}\r\n        dataTown = {dataTown}\r\n       >\r\n      </PopupInfoUser>\r\n\r\n      <DataGrid\r\n        components={{ Toolbar: QuickSearchToolbar }}\r\n        rows={tableData}\r\n        columns={columns}\r\n        // componentsProps={{\r\n        //   toolbar: {\r\n        //     value: searchText,\r\n        //     onChange: (event) => requestSearch(event.target.value),\r\n        //     clearSearch: () => requestSearch(''),\r\n        //   },\r\n        // }}\r\n      />\r\n    </Box>\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport UsersTableData from '../Components/UsersPage/UsersTableData';\r\n\r\n\r\nexport default function Contacts() {\r\n\r\n        return(\r\n            <Container sx={{mt:3}}>                \r\n                               \r\n               <UsersTableData  />\r\n\r\n            </Container>\r\n        )\r\n    }","import { Dialog, DialogContent, DialogTitle} from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { variables } from '../../Variables';\r\nimport ModeEditOutlineOutlinedIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: '500px',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        border: 1,\r\n        borderRadius: '15px',\r\n        borderColor: '#7986cb',\r\n    },\r\n    autocom: {\r\n        display: \"flex\",\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        width: '350px'\r\n    }\r\n})\r\n\r\nexport default function PopupNewTown(props) {\r\n    const classes = useStyles()\r\n    const {openPopupTown, setOpenPopupTown } = props;\r\n    const [town, setNewTown] = useState({province:\"dolnośląskie\"});\r\n\r\n    function validateForm() {\r\n        return town?.name && town?.province && town?.district && town?.commune;\r\n      }\r\n      \r\n    const handleClose = () => {\r\n        setOpenPopupTown(false);\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n\r\n        let name = event.target.id;\r\n\r\n        if (name.includes('clear-on-escape-option')) name = 'townId'\r\n\r\n        setNewTown({\r\n\r\n            ...town,\r\n\r\n            [name]: newValue ?? event.target.value,\r\n\r\n        });\r\n        console.log(town, \"newTown\")\r\n\r\n    };\r\n\r\n    const save = async () => {\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(town),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        fetch(variables.API_URL_ADD_TOWN, options).then(handleClose());\r\n    };\r\n\r\n\r\n    return (\r\n        <Dialog open={openPopupTown}\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n        >\r\n            <Button\r\n                sx={{ width: '90px', height: '35px' }}\r\n                type=\"submit\" color=\"error\" variant=\"contained\"\r\n                onClick={handleClose}>\r\n                Anuluj\r\n            </Button>\r\n\r\n            <DialogTitle style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n            }}>\r\n                <div>\r\n                    <h2> Dodaj nowe miasto </h2>\r\n                </div>\r\n            </DialogTitle>\r\n\r\n            <DialogContent sx={{\r\n                display: \"flex\",\r\n                justifyContent: 'center'\r\n            }}>\r\n\r\n                <Typography\r\n                    className={classes.contc}\r\n                    p={3}\r\n                    sx={{ boxShadow: 3 }}  >\r\n\r\n                    <Typography>\r\n\r\n                        <TextField\r\n                            id=\"name\"\r\n                            value={town?.name??\"\"}\r\n                            onChange={handleChange}\r\n\r\n                            sx={{ m: 1, width: '200px' }}\r\n                            label=\"Nazwa miasta\"\r\n                            placeholder='Nazwa miasta'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <ModeEditOutlineOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n                            \r\n                        <TextField\r\n                            id=\"district\"\r\n                            value={town?.district ?? \"\"}\r\n                            onChange={handleChange}\r\n\r\n                            sx={{ m: 1, width: '200px' }}\r\n                            label=\"Powiat\"\r\n                            placeholder='Powiat'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <ModeEditOutlineOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n\r\n\r\n                    </Typography>\r\n\r\n                    <Typography>\r\n\r\n                        <TextField\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                            id=\"province\"\r\n                            value={town?.province ?? \"dolnośląskie\"}\r\n                            onChange={handleChange}\r\n\r\n                            sx={{ m: 1, width: '200px' }}\r\n                            label=\"Województwo\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <ModeEditOutlineOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n\r\n\r\n                        <TextField\r\n                            id=\"commune\"\r\n                            value={town?.commune ?? \"\"}\r\n                            onChange={handleChange}\r\n\r\n                            sx={{ m: 1, width: '200px' }}\r\n                            label=\"Gmina\"\r\n                            placeholder='Gmina'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <ModeEditOutlineOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            color='secondary' />\r\n\r\n\r\n                        <Typography sx={{\r\n                            display: \"flex\",\r\n                            justifyContent: 'flex-end'\r\n                        }}>\r\n                            <Button\r\n                                sx={{ width: '120px', height: '40px', mt: 2 }}\r\n                                type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                                onClick={save}                                \r\n                                disabled={!validateForm()}\r\n                            >Zapisz</Button>\r\n                        </Typography>\r\n                    </Typography>\r\n\r\n\r\n                </Typography>\r\n\r\n            </DialogContent>\r\n\r\n\r\n        </Dialog>\r\n\r\n\r\n    )\r\n}","import { variables } from '../../Variables.js';\r\nimport React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TextField from '@mui/material/TextField';\r\nimport {\r\n  DataGrid,\r\n  GridToolbarFilterButton,\r\n  GridToolbar\r\n} from '@mui/x-data-grid';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PopupNewTown from './PopupNewTown';\r\nimport { Button } from '@mui/material';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\n\r\n\r\nfunction escapeRegExp(value) {\r\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n\r\nfunction QuickSearchToolbar(props) {\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        p: 0.5,\r\n        pb: 0,\r\n        justifyContent: 'space-between',\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        flexWrap: 'wrap',\r\n      }}\r\n    >\r\n      <div>\r\n        <GridToolbarFilterButton />       \r\n      </div>\r\n      <TextField\r\n        variant=\"standard\"\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        placeholder=\"Search…\"\r\n        InputProps={{\r\n          startAdornment: <SearchIcon fontSize=\"small\" />,\r\n          endAdornment: (\r\n            <IconButton\r\n              title=\"Clear\"\r\n              aria-label=\"Clear\"\r\n              size=\"small\"\r\n              style={{ visibility: props.value ? 'visible' : 'hidden' }}\r\n              onClick={props.clearSearch}\r\n            >\r\n              <ClearIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          ),\r\n        }}\r\n        sx={{\r\n          width: {\r\n            xs: 1,\r\n            sm: 'auto',\r\n          },\r\n          m: (theme) => theme.spacing(1, 0.5, 1.5),\r\n          '& .MuiSvgIcon-root': {\r\n            mr: 0.5,\r\n          },\r\n          '& .MuiInput-underline:before': {\r\n            borderBottom: 1,\r\n            borderColor: 'divider',\r\n          },\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nQuickSearchToolbar.propTypes = {\r\n  clearSearch: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function QuickFilteringGrid() {\r\n \r\n  const [openPopupTown, setOpenPopupTown] = useState(false)\r\n\r\n  const [searchText, setSearchText] = React.useState('');\r\n\r\n  const requestSearch = (searchValue) => {\r\n    setSearchText(searchValue);\r\n    const searchRegex = new RegExp(escapeRegExp(searchValue), 'i');\r\n    const filteredRows = tableData.filter((row) => {\r\n      return Object.keys(row).some((field) => {\r\n        return searchRegex.test(row[field].toString());\r\n      });\r\n    });\r\n    setTableData(filteredRows);\r\n  };\r\n\r\n  const [tableData, setTableData] = useState([])\r\n  const columns = [\r\n    { field: 'province', headerName: 'Województwo', width: 120 },\r\n    { field: 'commune', headerName: 'Gmina', width: 120 },\r\n    { field: 'district', headerName: 'Powiat', width: 100 },\r\n    { field: 'townName', headerName: 'Miasto', width: 100 },\r\n    { field: 'code', headerName: 'Kod pocztowy', width: 120 },\r\n    { field: 'street', headerName: 'Ulica', width: 100 },\r\n    { field: 'number', headerName: 'Numer', width: 70 },\r\n    { field: 'userName', headerName: 'Nazwa szkoły', width: 180 },\r\n    { field: 'userEmail', headerName: 'E-mail', width: 160 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetch(variables.API_URL_ADRESS_BROWSE)\r\n      .then((data) => data.json())\r\n      .then((data) => setTableData(data))\r\n    },[]);\r\n\r\n  React.useEffect(() => {\r\n    setTableData(tableData);\r\n  }, [tableData]);\r\n\r\n  return (\r\n    <Box sx={{\r\n        boxShadow: 4,\r\n        bgcolor: 'background.paper',\r\n        height: 480,\r\n        width: 1\r\n      }}>\r\n         <Button sx={{ borderRadius: '55px', m: 1}} \r\n         type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n          onClick={() => setOpenPopupTown(true)}>\r\n          <AddCircleOutlineOutlinedIcon sx={{ fontSize: 25, mr:1 }} />\r\n          Miasto\r\n        </Button>\r\n\r\n        <PopupNewTown\r\n          openPopupTown={openPopupTown}\r\n          setOpenPopupTown={setOpenPopupTown}>\r\n        </PopupNewTown>\r\n      <DataGrid     \r\n        components={{ Toolbar: GridToolbar }}\r\n        rows={tableData}\r\n        columns={columns}\r\n        componentsProps={{\r\n          toolbar: {\r\n            value: searchText,\r\n            onChange: (event) => requestSearch(event.target.value),\r\n            clearSearch: () => requestSearch(''),\r\n          },\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport AdressesTable from '../Components/AdressesPage/AdressesTable';\r\n\r\n\r\nexport default function Contacts() {\r\n \r\n    return (\r\n        <Container>\r\n\r\n            <Typography sx={{mt:3}}>\r\n                <AdressesTable />\r\n            </Typography>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, TextField, Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { variables } from '../../Variables';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport InputMask from \"react-input-mask\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: '15px',\r\n    },\r\n    info: {\r\n        width: '100%',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: '15px',\r\n    },\r\n    account: {\r\n        width: '50%',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems: 'center'\r\n    }\r\n})\r\n\r\nexport default function AccountInfoForm() {\r\n    const classes = useStyles()\r\n    const [tableData, setTableData] = useState([])\r\n    const [adressData, setAdressData] = useState([])\r\n    const [newUser, setNewUser] = useState({tableData, adressData});\r\n    const location = useLocation()\r\n\r\n    function validateForm() {\r\n        return newUser?.street && newUser?.number && newUser?.studentScore && newUser?.phone;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(variables.API_URL_USERS + `/${location.state.id}`)\r\n            .then((data) => data.json())\r\n            .then((data) => setTableData(data))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(variables.API_URL_ADRESS + `/${location.state.id}`)\r\n            .then((data) => data.json())\r\n            .then((data) => setAdressData(data))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (tableData)\r\n            setNewUser(tableData);\r\n    }, [tableData]);\r\n\r\n    useEffect(() => {\r\n        if (adressData)\r\n            setNewUser(adressData);\r\n    }, [adressData]);\r\n\r\n    const handleChange = (event) => {\r\n\r\n        const name = event.target.id;\r\n\r\n        setNewUser({\r\n\r\n            ...newUser,\r\n\r\n            [name]: event.target.value,\r\n\r\n        }); \r\n\r\n    };\r\n    function refreshPage() {\r\n        window.location.reload();\r\n    }\r\n    const updateUser = async () => {\r\n        const editUser = {\r\n            street: newUser.street,\r\n            number: newUser.number,\r\n            studentScore: newUser.studentScore,\r\n            phone: newUser.phone,\r\n        }\r\n\r\n        const options = {\r\n            method: 'PUT',\r\n            body: JSON.stringify(editUser),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        fetch(variables.API_URL_USERS + `/${location.state.id}`, options).then(refreshPage);        \r\n                //console.log(editUser, \"userChange\")\r\n\r\n    }\r\n\r\n    return (\r\n        <Container sx={{ padding: 2 }}  >\r\n\r\n            <Typography className={classes.contc} p={1}\r\n                sx={{ boxShadow: 5, border: 2, borderColor: '#c5cae9' }}  >\r\n\r\n                <Typography className={classes.info}>\r\n\r\n                    <Typography className={classes.account} sx={{ borderRight: 2, borderColor: '#c5cae9' }}>\r\n\r\n                        <Avatar alt=\"szkola\" src=\"logo_szkoła.png\" sx={{ width: 200, height: 180, m: 3 }} />\r\n                        <h3>{tableData.fullName}</h3>\r\n                        <h5>{tableData.shortName}</h5>\r\n\r\n                    </Typography>\r\n\r\n                    <Typography sx={{ m: 3, width: '95%', height: 'auto' }}>\r\n                        <Typography sx={{ display: \"flex\", flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                            <h2>Twój profil</h2>\r\n                            <p>Niekóre z danych możesz aktualizować</p>\r\n                        </Typography>\r\n                        <Typography sx={{ display: \"flex\", flexDirection: 'row', alignItems: 'center', justifyContent: 'space-around' }}>\r\n\r\n                            <Typography >\r\n\r\n                                <Typography sx={{ display: \"flex\", flexDirection: 'row', alignItems: 'center', justifyContent: 'space-around' }}>\r\n\r\n                                    <Typography>\r\n\r\n                                        <Typography>\r\n                                            <TextField\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                sx={{ m: 1, mt: 2, width: '190px' }}\r\n                                                label=\"Ulica\"\r\n                                                placeholder='Ulica'\r\n                                                color='secondary'\r\n                                                value={newUser?.street}\r\n                                                id=\"street\"\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                            <TextField\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                sx={{ m: 1, mt: 2, width: '90px' }}\r\n                                                label=\"Numer\"\r\n                                                placeholder='Numer'\r\n                                                color='secondary'\r\n                                                value={newUser?.number}\r\n                                                id=\"number\"\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            <TextField\r\n                                                disabled\r\n                                                sx={{ m: 1, mt: 2, width: '190px' }}\r\n                                                label=\"Miasto\"\r\n                                                placeholder='Miasto'\r\n                                                color='secondary'\r\n                                                value={adressData?.townName ?? \"\"}\r\n                                                id=\"townName\"\r\n                                            //onChange={handleChange}\r\n                                            />\r\n                                            <InputMask\r\n                                                mask=\"99-999\"\r\n                                                value={adressData?.code ?? \"\"}\r\n                                                disabled={true}\r\n                                                maskChar=\" \"\r\n                                                onChange={handleChange}\r\n                                            >\r\n                                                {() => <TextField\r\n                                                    disabled\r\n                                                    sx={{ m: 1, mt: 2, width: '90px' }}\r\n                                                    label=\"Kod\"\r\n                                                    placeholder='Kod'\r\n                                                    color='secondary'\r\n                                                    value={adressData?.code ?? \"\"}\r\n                                                    id=\"code\"\r\n                                                //onChange={handleChange}\r\n                                                />}\r\n                                            </InputMask>\r\n\r\n                                        </Typography>\r\n\r\n                                        <Typography>\r\n                                            <TextField\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                sx={{ m: 1, mt: 2, width: '300px' }}\r\n                                                label=\"Ilość uczniów\"\r\n                                                placeholder='Ilość uczniów'\r\n                                                color='secondary'\r\n                                                value={newUser?.studentScore}\r\n                                                id=\"studentScore\"\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </Typography>\r\n                                    </Typography>\r\n\r\n                                    <Typography>\r\n                                        <TextField\r\n                                            disabled\r\n                                            sx={{ m: 1, mt: 2, width: '250px' }}\r\n                                            label=\"Województwo\"\r\n                                            placeholder='Województwo'\r\n                                            color='secondary'\r\n                                            value={adressData?.province ?? \"\"}\r\n                                            id=\"province\"\r\n                                        //onChange={handleChange}\r\n                                        />\r\n                                        <TextField\r\n                                            disabled\r\n                                            sx={{ m: 1, mt: 2, width: '250px' }}\r\n                                            label=\"Gmina\"\r\n                                            placeholder='Gmina'\r\n                                            color='secondary'\r\n                                            value={adressData?.district ?? \"\"}\r\n                                            id=\"district\"\r\n                                        //onChange={handleChange}\r\n                                        />\r\n                                        <TextField\r\n                                            disabled\r\n                                            sx={{ m: 1, mt: 2, width: '250px' }}\r\n                                            label=\"Powiat\"\r\n                                            placeholder='Powiat'\r\n                                            color='secondary'\r\n                                            value={adressData?.commune ?? \"\"}\r\n                                            id=\"commune\"\r\n                                        //onChange={handleChange}\r\n                                        />\r\n                                    </Typography>\r\n                                </Typography>\r\n\r\n                                <h5>Dane kontaktowe</h5>\r\n                                <Typography>\r\n                                    <Typography>\r\n                                        <TextField\r\n                                            disabled\r\n                                            sx={{ m: 1, mt: 2, width: '300px' }}\r\n                                            label=\"Adres e-mail\"\r\n                                            placeholder='Adres e-mail'\r\n                                            color='secondary'\r\n                                            defaultValue=\"nazwa uzytkownika\"\r\n                                            value={tableData?.email}\r\n                                            id=\"fullName\"\r\n                                        //onChange={handleChange}\r\n                                        />\r\n\r\n                                        <InputMask\r\n                                            mask=\"999999999\"\r\n                                            value={newUser?.phone}\r\n                                            disabled={false}\r\n                                            maskChar=\" \"\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            {() => <TextField\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                sx={{ m: 1, mt: 2, width: '300px' }}\r\n                                                label=\"Numer telefonu\"\r\n                                                placeholder='Numer telefonu'\r\n                                                color='secondary'\r\n                                                id=\"phone\"\r\n                                                \r\n                                            />}\r\n                                        </InputMask>\r\n\r\n                                    </Typography>\r\n                                    <Typography sx={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: 'flex-end'\r\n                                    }}>\r\n                                        <Button\r\n                                            sx={{ width: '150px', height: '40px', mt: 2 }}\r\n                                            type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                                            onClick={updateUser}\r\n                                            //disabled={!validateForm()}\r\n                                        >Zapisz zmiany</Button>\r\n                                    </Typography>\r\n                                </Typography>\r\n\r\n\r\n                            </Typography>\r\n\r\n\r\n\r\n                        </Typography>\r\n\r\n                    </Typography>\r\n\r\n                </Typography>\r\n\r\n\r\n            </Typography>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Typography, TextField } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { variables } from '../../Variables';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: '15px',\r\n    },\r\n    info: {\r\n        width: '100%',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n    },\r\n})\r\n\r\nexport default function Contacts() {\r\n    const classes = useStyles()\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(variables.API_URL_DELIVERY_BROWSE)\r\n            .then((data) => data.json())\r\n            .then((data) => setTableData(data))\r\n    }, []);\r\n\r\n    const [values, setValues] = useState({\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n\r\n    const handleChangePass = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({\r\n            ...values,\r\n            showPassword: !values.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n\r\n    return (\r\n        <Container sx={{ padding: 0 }}  >\r\n\r\n            <Typography className={classes.contc} p={1}\r\n                sx={{ boxShadow: 10, border: 2, borderColor: '#c5cae9' }}  >\r\n\r\n                <Typography sx={{ display: \"flex\", flexDirection: 'column', alignItems: 'center', borderBottom: 2, borderColor: '#c5cae9' }}>\r\n                    <h2>Zmień hasło</h2>\r\n                    <p>Potwierdź stare hasło i wprowadź nowe</p>\r\n                </Typography>\r\n\r\n                <Typography className={classes.info}>\r\n\r\n                    <Typography sx={{ m:3}}>\r\n                        <TextField\r\n                            id=\"currentPassword\"\r\n\r\n                            sx={{ m: 1, width: '350px' }}\r\n                            label=\"Aktualne hasło\"\r\n                            type={values.showPassword1 ? 'text' : 'password'}\r\n                            value={values.password1}\r\n                            onChange={handleChangePass('password')}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {values.showPassword1 ? <VisibilityOff /> : <Visibility />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        color='secondary' />\r\n                        \r\n                    </Typography>\r\n\r\n                    <Typography sx={{ display: \"flex\", flexDirection: 'column', alignItems: 'center' }}>\r\n                        <Typography>\r\n\r\n                            <TextField\r\n                                id=\"newPassword\"\r\n\r\n                                sx={{ m: 1, width: '350px' }}\r\n                                label=\"Nowe hasło\"\r\n                                type={values.showPassword2 ? 'text' : 'password'}\r\n                                value={values.password2}\r\n                                onChange={handleChangePass('password')}\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword}\r\n                                                onMouseDown={handleMouseDownPassword}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {values.showPassword2 ? <VisibilityOff /> : <Visibility />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                color='secondary' />\r\n\r\n                            <TextField\r\n                                id=\"confirmNewPassword\"\r\n\r\n                                sx={{ m: 1, width: '350px' }}\r\n                                label=\"Powtórz nowe hasło\"\r\n                                type={values.showPassword3 ? 'text' : 'password'}\r\n                                value={values.password3}\r\n                                onChange={handleChangePass('password3')}\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword}\r\n                                                onMouseDown={handleMouseDownPassword}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {values.showPassword3 ? <VisibilityOff /> : <Visibility />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                color='secondary' />\r\n                        </Typography>\r\n                    </Typography>\r\n\r\n                        <Typography sx={{\r\n                            display: \"flex\",\r\n                            justifyContent: 'flex-end'\r\n                        }}>\r\n                            <Button\r\n                                sx={{ width: '150px', height: '40px', mt: 2 }}\r\n                                type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                            //onClick={updateUser}\r\n                            //disabled={!validateForm()}\r\n                            >Zmień</Button>\r\n                        </Typography>\r\n\r\n                </Typography>\r\n\r\n            </Typography>\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport AccountInfoForm from '../Components/Setting/AccountInfoForm';\r\nimport ChangePasswordForm from '../Components/Setting/ChangePasswordForm';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    mess: {\r\n        display: 'flex',\r\n        direction: 'column',\r\n        flexFlow: 'stretch',\r\n        background: 'white',\r\n    },\r\n    hist: {\r\n        display: 'flex',\r\n        direction: 'row',\r\n        flexFlow: 'stretch',\r\n        background: 'white',\r\n    }\r\n\r\n})\r\n\r\nexport default function Settings(props) {\r\n    const classes = useStyles()\r\n    const {id} = useParams(props);\r\n\r\n    return (\r\n        <Container>\r\n        \r\n            <Typography >\r\n\r\n                <Typography className={classes.hist}>\r\n\r\n                    <AccountInfoForm id={id} />\r\n\r\n                </Typography>\r\n\r\n                <Typography className={classes.hist}>\r\n\r\n                    <ChangePasswordForm id={id} />\r\n\r\n                </Typography>\r\n\r\n            </Typography>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, TextField, Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { variables } from '../../Variables';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contc: {\r\n        width: '900px',\r\n        height: '500px',\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: '15px',\r\n        flexWrap:\"wrap\",\r\n        background: \"white\"\r\n\r\n    },\r\n    info: {\r\n        width: '100%',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n    },\r\n    account: {\r\n        width: '90%',\r\n        height: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        flexWrap:\"wrap\"\r\n    }\r\n})\r\n\r\nexport default function Contacts() {\r\n    const classes = useStyles()\r\n    const navigate = useNavigate();\r\n\r\n    const [values, setValues] = useState({\r\n        password: '',\r\n        email:'',\r\n        showPassword: false,\r\n    });\r\n\r\n    const handleChangePass = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({\r\n            ...values,\r\n            showPassword: !values.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const login = async () => {\r\n        const loginDto = \r\n            {\r\n                email : values.email,\r\n                password : values.password\r\n            }\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(loginDto),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        fetch(variables.API_URL_USERS_LOGIN, options)      \r\n        .then((data) => data.json())\r\n        .then(data=>{\r\n            if(data){\r\n                //navigate(`/home/${data.id}`)\r\n                navigate('/home', { state:{id:data.id, role:data.roleName,}  });\r\n            }\r\n        })\r\n    }\r\n   \r\n    console.log(values.password, \"hasło\");\r\n    \r\n    return (\r\n        <Container sx={{ padding: 2 }}  >\r\n\r\n            <Typography className={classes.contc} p={1}\r\n                sx={{ boxShadow: 5, border: 2, borderColor: '#689f38' }}  >\r\n\r\n                <Typography className={classes.info}>\r\n\r\n                    <Typography className={classes.account} sx={{ borderRight: 2, borderColor: '#c5cae9' }}>\r\n\r\n                        <Avatar alt=\"szkola\" src=\"Kleks_logo.png\" sx={{ width: 200, height: 180, m: 3 }} />\r\n                        <h3>Witaj w CommunityApp</h3>\r\n\r\n                    </Typography>\r\n\r\n                    <Typography sx={{ m: 3, width: '95%', height: 'auto'}} >\r\n                        <Typography sx={{ display: \"flex\", flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                            <h2>Zaloguj się</h2>\r\n                            <p>Podaj swój adres email oraz hasło</p>\r\n                        </Typography>\r\n\r\n                        <Typography sx={{ display: \"flex\", flexDirection: 'column', alignItems: 'center', justifyContent: 'space-around' }}>\r\n\r\n                            <TextField\r\n                                sx={{ m: 1, mt: 2, width: '350px' }}\r\n                                label=\"E-mail\"\r\n                                placeholder='E-mail'\r\n                                color='secondary'\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChangePass('email')}\r\n\r\n                                />\r\n\r\n                        <TextField\r\n                            id=\"currentPassword\"\r\n\r\n                            sx={{ m: 1, width: '350px' }}\r\n                            label=\"Hasło\"\r\n                            type={values.showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            onChange={handleChangePass('password')}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        color='secondary' />\r\n\r\n                        </Typography>\r\n\r\n                        <Typography sx={{\r\n                            display: \"flex\",\r\n                            justifyContent: 'flex-end'\r\n                        }}>\r\n                            <Button\r\n                                sx={{ width: '150px', height: '40px', mt: 2 }}\r\n                                type=\"submit\" color=\"secondary\" variant=\"contained\"\r\n                            onClick={login}\r\n                            //disabled={!validateForm()}\r\n                            >Zaloguj</Button>\r\n                        </Typography>\r\n\r\n                    </Typography>\r\n\r\n                </Typography>\r\n\r\n            </Typography>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Container } from '@mui/material';\r\nimport Login from '../Components/Login/Login';\r\n\r\n\r\nexport default function Contacts() {\r\n\r\n        return(\r\n            <Container sx={{mt:3}}>                \r\n                               \r\n               <Login  />\r\n\r\n            </Container>\r\n        )\r\n    }","import React from 'react'\nimport Navbar from './Components/Navbar';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Home from './Pages/Home';\nimport Contacts from './Pages/Contacts.js';\nimport Delivery from './Pages/Delivery';\nimport Files from './Pages/Files';\nimport Users from './Pages/Users';\nimport Adresses from './Pages/Adresses';\nimport Settings from './Pages/Settings';\nimport Login from './Pages/Login';\nimport { Routes, Route, HashRouter, Navigate } from 'react-router-dom';\nimport { lightGreen } from '@mui/material/colors';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: lightGreen[100],\n    },\n    secondary: {\n      main: '#689f38',\n    },\n    background: {\n      paper: '#fff',\n      default: \"#9ccc65\"\n    },\n    action: {\n      hover: '#c5e1a5',\n    }\n  },\n  typography: {\n    fontFamily: 'Merriweather',\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n    h6: {\n      fontSize: \"15px\",\n      fontWeight: 200,\n    }\n  }\n})\n\nfunction App() {\n\n  const WithNav = () => {\n    return (\n      <Navbar>\n\n        <Routes>\n          <Route path='/home' element={<Home />} />\n          <Route path='/users' element={<Users />} />\n          <Route path='/delivery' element={<Delivery />} />\n          <Route path='/files' element={<Files />} />\n          <Route path='/adresses' element={<Adresses />} />\n          <Route path='/contacts' element={<Contacts />} />\n          <Route path='/settings' element={<Settings />} />\n        </Routes>\n\n      </Navbar>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={theme}>          \n\n      <HashRouter>   \n        <Routes>\n          <Route path='/login' element={<Login />} />\n          <Route path='*' element={<WithNav />} />\n        </Routes>\n      </HashRouter>\n    </ThemeProvider>\n  )\n}\n\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}